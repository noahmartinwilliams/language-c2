Failed to parse func-array.c
with message:
Syntax error !The symbol `sf0' does not fit here. ("func-array.c": line 21)
/* No Input */
Working dir: /home/noah/src/package-sources/language-c/test/harness/parse_dg
Preprocessed input follows:

# 1 "func-array.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "func-array.c"







extern void abort (void);
# 21 "func-array.c"
short _Fract sf0 (short _Fract args[]) { return args[0]; } short _Fract sf1 (short _Fract args[]) { return args[1]; } short _Fract sf2 (short _Fract args[]) { return args[2]; } short _Fract sf3 (short _Fract args[]) { return args[3]; } short _Fract sf4 (short _Fract args[]) { return args[4]; } short _Fract sf5 (short _Fract args[]) { return args[5]; }
_Fract f0 (_Fract args[]) { return args[0]; } _Fract f1 (_Fract args[]) { return args[1]; } _Fract f2 (_Fract args[]) { return args[2]; } _Fract f3 (_Fract args[]) { return args[3]; } _Fract f4 (_Fract args[]) { return args[4]; } _Fract f5 (_Fract args[]) { return args[5]; }
long _Fract lf0 (long _Fract args[]) { return args[0]; } long _Fract lf1 (long _Fract args[]) { return args[1]; } long _Fract lf2 (long _Fract args[]) { return args[2]; } long _Fract lf3 (long _Fract args[]) { return args[3]; } long _Fract lf4 (long _Fract args[]) { return args[4]; } long _Fract lf5 (long _Fract args[]) { return args[5]; }
long long _Fract llf0 (long long _Fract args[]) { return args[0]; } long long _Fract llf1 (long long _Fract args[]) { return args[1]; } long long _Fract llf2 (long long _Fract args[]) { return args[2]; } long long _Fract llf3 (long long _Fract args[]) { return args[3]; } long long _Fract llf4 (long long _Fract args[]) { return args[4]; } long long _Fract llf5 (long long _Fract args[]) { return args[5]; }
unsigned short _Fract usf0 (unsigned short _Fract args[]) { return args[0]; } unsigned short _Fract usf1 (unsigned short _Fract args[]) { return args[1]; } unsigned short _Fract usf2 (unsigned short _Fract args[]) { return args[2]; } unsigned short _Fract usf3 (unsigned short _Fract args[]) { return args[3]; } unsigned short _Fract usf4 (unsigned short _Fract args[]) { return args[4]; } unsigned short _Fract usf5 (unsigned short _Fract args[]) { return args[5]; }
unsigned _Fract uf0 (unsigned _Fract args[]) { return args[0]; } unsigned _Fract uf1 (unsigned _Fract args[]) { return args[1]; } unsigned _Fract uf2 (unsigned _Fract args[]) { return args[2]; } unsigned _Fract uf3 (unsigned _Fract args[]) { return args[3]; } unsigned _Fract uf4 (unsigned _Fract args[]) { return args[4]; } unsigned _Fract uf5 (unsigned _Fract args[]) { return args[5]; }
unsigned long _Fract ulf0 (unsigned long _Fract args[]) { return args[0]; } unsigned long _Fract ulf1 (unsigned long _Fract args[]) { return args[1]; } unsigned long _Fract ulf2 (unsigned long _Fract args[]) { return args[2]; } unsigned long _Fract ulf3 (unsigned long _Fract args[]) { return args[3]; } unsigned long _Fract ulf4 (unsigned long _Fract args[]) { return args[4]; } unsigned long _Fract ulf5 (unsigned long _Fract args[]) { return args[5]; }
unsigned long long _Fract ullf0 (unsigned long long _Fract args[]) { return args[0]; } unsigned long long _Fract ullf1 (unsigned long long _Fract args[]) { return args[1]; } unsigned long long _Fract ullf2 (unsigned long long _Fract args[]) { return args[2]; } unsigned long long _Fract ullf3 (unsigned long long _Fract args[]) { return args[3]; } unsigned long long _Fract ullf4 (unsigned long long _Fract args[]) { return args[4]; } unsigned long long _Fract ullf5 (unsigned long long _Fract args[]) { return args[5]; }
_Sat short _Fract Ssf0 (_Sat short _Fract args[]) { return args[0]; } _Sat short _Fract Ssf1 (_Sat short _Fract args[]) { return args[1]; } _Sat short _Fract Ssf2 (_Sat short _Fract args[]) { return args[2]; } _Sat short _Fract Ssf3 (_Sat short _Fract args[]) { return args[3]; } _Sat short _Fract Ssf4 (_Sat short _Fract args[]) { return args[4]; } _Sat short _Fract Ssf5 (_Sat short _Fract args[]) { return args[5]; }
_Sat _Fract Sf0 (_Sat _Fract args[]) { return args[0]; } _Sat _Fract Sf1 (_Sat _Fract args[]) { return args[1]; } _Sat _Fract Sf2 (_Sat _Fract args[]) { return args[2]; } _Sat _Fract Sf3 (_Sat _Fract args[]) { return args[3]; } _Sat _Fract Sf4 (_Sat _Fract args[]) { return args[4]; } _Sat _Fract Sf5 (_Sat _Fract args[]) { return args[5]; }
_Sat long _Fract Slf0 (_Sat long _Fract args[]) { return args[0]; } _Sat long _Fract Slf1 (_Sat long _Fract args[]) { return args[1]; } _Sat long _Fract Slf2 (_Sat long _Fract args[]) { return args[2]; } _Sat long _Fract Slf3 (_Sat long _Fract args[]) { return args[3]; } _Sat long _Fract Slf4 (_Sat long _Fract args[]) { return args[4]; } _Sat long _Fract Slf5 (_Sat long _Fract args[]) { return args[5]; }
_Sat long long _Fract Sllf0 (_Sat long long _Fract args[]) { return args[0]; } _Sat long long _Fract Sllf1 (_Sat long long _Fract args[]) { return args[1]; } _Sat long long _Fract Sllf2 (_Sat long long _Fract args[]) { return args[2]; } _Sat long long _Fract Sllf3 (_Sat long long _Fract args[]) { return args[3]; } _Sat long long _Fract Sllf4 (_Sat long long _Fract args[]) { return args[4]; } _Sat long long _Fract Sllf5 (_Sat long long _Fract args[]) { return args[5]; }
_Sat unsigned short _Fract Susf0 (_Sat unsigned short _Fract args[]) { return args[0]; } _Sat unsigned short _Fract Susf1 (_Sat unsigned short _Fract args[]) { return args[1]; } _Sat unsigned short _Fract Susf2 (_Sat unsigned short _Fract args[]) { return args[2]; } _Sat unsigned short _Fract Susf3 (_Sat unsigned short _Fract args[]) { return args[3]; } _Sat unsigned short _Fract Susf4 (_Sat unsigned short _Fract args[]) { return args[4]; } _Sat unsigned short _Fract Susf5 (_Sat unsigned short _Fract args[]) { return args[5]; }
_Sat unsigned _Fract Suf0 (_Sat unsigned _Fract args[]) { return args[0]; } _Sat unsigned _Fract Suf1 (_Sat unsigned _Fract args[]) { return args[1]; } _Sat unsigned _Fract Suf2 (_Sat unsigned _Fract args[]) { return args[2]; } _Sat unsigned _Fract Suf3 (_Sat unsigned _Fract args[]) { return args[3]; } _Sat unsigned _Fract Suf4 (_Sat unsigned _Fract args[]) { return args[4]; } _Sat unsigned _Fract Suf5 (_Sat unsigned _Fract args[]) { return args[5]; }
_Sat unsigned long _Fract Sulf0 (_Sat unsigned long _Fract args[]) { return args[0]; } _Sat unsigned long _Fract Sulf1 (_Sat unsigned long _Fract args[]) { return args[1]; } _Sat unsigned long _Fract Sulf2 (_Sat unsigned long _Fract args[]) { return args[2]; } _Sat unsigned long _Fract Sulf3 (_Sat unsigned long _Fract args[]) { return args[3]; } _Sat unsigned long _Fract Sulf4 (_Sat unsigned long _Fract args[]) { return args[4]; } _Sat unsigned long _Fract Sulf5 (_Sat unsigned long _Fract args[]) { return args[5]; }
_Sat unsigned long long _Fract Sullf0 (_Sat unsigned long long _Fract args[]) { return args[0]; } _Sat unsigned long long _Fract Sullf1 (_Sat unsigned long long _Fract args[]) { return args[1]; } _Sat unsigned long long _Fract Sullf2 (_Sat unsigned long long _Fract args[]) { return args[2]; } _Sat unsigned long long _Fract Sullf3 (_Sat unsigned long long _Fract args[]) { return args[3]; } _Sat unsigned long long _Fract Sullf4 (_Sat unsigned long long _Fract args[]) { return args[4]; } _Sat unsigned long long _Fract Sullf5 (_Sat unsigned long long _Fract args[]) { return args[5]; }
short _Accum sa0 (short _Accum args[]) { return args[0]; } short _Accum sa1 (short _Accum args[]) { return args[1]; } short _Accum sa2 (short _Accum args[]) { return args[2]; } short _Accum sa3 (short _Accum args[]) { return args[3]; } short _Accum sa4 (short _Accum args[]) { return args[4]; } short _Accum sa5 (short _Accum args[]) { return args[5]; }
_Accum a0 (_Accum args[]) { return args[0]; } _Accum a1 (_Accum args[]) { return args[1]; } _Accum a2 (_Accum args[]) { return args[2]; } _Accum a3 (_Accum args[]) { return args[3]; } _Accum a4 (_Accum args[]) { return args[4]; } _Accum a5 (_Accum args[]) { return args[5]; }
long _Accum la0 (long _Accum args[]) { return args[0]; } long _Accum la1 (long _Accum args[]) { return args[1]; } long _Accum la2 (long _Accum args[]) { return args[2]; } long _Accum la3 (long _Accum args[]) { return args[3]; } long _Accum la4 (long _Accum args[]) { return args[4]; } long _Accum la5 (long _Accum args[]) { return args[5]; }
long long _Accum lla0 (long long _Accum args[]) { return args[0]; } long long _Accum lla1 (long long _Accum args[]) { return args[1]; } long long _Accum lla2 (long long _Accum args[]) { return args[2]; } long long _Accum lla3 (long long _Accum args[]) { return args[3]; } long long _Accum lla4 (long long _Accum args[]) { return args[4]; } long long _Accum lla5 (long long _Accum args[]) { return args[5]; }
unsigned short _Accum usa0 (unsigned short _Accum args[]) { return args[0]; } unsigned short _Accum usa1 (unsigned short _Accum args[]) { return args[1]; } unsigned short _Accum usa2 (unsigned short _Accum args[]) { return args[2]; } unsigned short _Accum usa3 (unsigned short _Accum args[]) { return args[3]; } unsigned short _Accum usa4 (unsigned short _Accum args[]) { return args[4]; } unsigned short _Accum usa5 (unsigned short _Accum args[]) { return args[5]; }
unsigned _Accum ua0 (unsigned _Accum args[]) { return args[0]; } unsigned _Accum ua1 (unsigned _Accum args[]) { return args[1]; } unsigned _Accum ua2 (unsigned _Accum args[]) { return args[2]; } unsigned _Accum ua3 (unsigned _Accum args[]) { return args[3]; } unsigned _Accum ua4 (unsigned _Accum args[]) { return args[4]; } unsigned _Accum ua5 (unsigned _Accum args[]) { return args[5]; }
unsigned long _Accum ula0 (unsigned long _Accum args[]) { return args[0]; } unsigned long _Accum ula1 (unsigned long _Accum args[]) { return args[1]; } unsigned long _Accum ula2 (unsigned long _Accum args[]) { return args[2]; } unsigned long _Accum ula3 (unsigned long _Accum args[]) { return args[3]; } unsigned long _Accum ula4 (unsigned long _Accum args[]) { return args[4]; } unsigned long _Accum ula5 (unsigned long _Accum args[]) { return args[5]; }
unsigned long long _Accum ulla0 (unsigned long long _Accum args[]) { return args[0]; } unsigned long long _Accum ulla1 (unsigned long long _Accum args[]) { return args[1]; } unsigned long long _Accum ulla2 (unsigned long long _Accum args[]) { return args[2]; } unsigned long long _Accum ulla3 (unsigned long long _Accum args[]) { return args[3]; } unsigned long long _Accum ulla4 (unsigned long long _Accum args[]) { return args[4]; } unsigned long long _Accum ulla5 (unsigned long long _Accum args[]) { return args[5]; }
_Sat short _Accum Ssa0 (_Sat short _Accum args[]) { return args[0]; } _Sat short _Accum Ssa1 (_Sat short _Accum args[]) { return args[1]; } _Sat short _Accum Ssa2 (_Sat short _Accum args[]) { return args[2]; } _Sat short _Accum Ssa3 (_Sat short _Accum args[]) { return args[3]; } _Sat short _Accum Ssa4 (_Sat short _Accum args[]) { return args[4]; } _Sat short _Accum Ssa5 (_Sat short _Accum args[]) { return args[5]; }
_Sat _Accum Sa0 (_Sat _Accum args[]) { return args[0]; } _Sat _Accum Sa1 (_Sat _Accum args[]) { return args[1]; } _Sat _Accum Sa2 (_Sat _Accum args[]) { return args[2]; } _Sat _Accum Sa3 (_Sat _Accum args[]) { return args[3]; } _Sat _Accum Sa4 (_Sat _Accum args[]) { return args[4]; } _Sat _Accum Sa5 (_Sat _Accum args[]) { return args[5]; }
_Sat long _Accum Sla0 (_Sat long _Accum args[]) { return args[0]; } _Sat long _Accum Sla1 (_Sat long _Accum args[]) { return args[1]; } _Sat long _Accum Sla2 (_Sat long _Accum args[]) { return args[2]; } _Sat long _Accum Sla3 (_Sat long _Accum args[]) { return args[3]; } _Sat long _Accum Sla4 (_Sat long _Accum args[]) { return args[4]; } _Sat long _Accum Sla5 (_Sat long _Accum args[]) { return args[5]; }
_Sat long long _Accum Slla0 (_Sat long long _Accum args[]) { return args[0]; } _Sat long long _Accum Slla1 (_Sat long long _Accum args[]) { return args[1]; } _Sat long long _Accum Slla2 (_Sat long long _Accum args[]) { return args[2]; } _Sat long long _Accum Slla3 (_Sat long long _Accum args[]) { return args[3]; } _Sat long long _Accum Slla4 (_Sat long long _Accum args[]) { return args[4]; } _Sat long long _Accum Slla5 (_Sat long long _Accum args[]) { return args[5]; }
_Sat unsigned short _Accum Susa0 (_Sat unsigned short _Accum args[]) { return args[0]; } _Sat unsigned short _Accum Susa1 (_Sat unsigned short _Accum args[]) { return args[1]; } _Sat unsigned short _Accum Susa2 (_Sat unsigned short _Accum args[]) { return args[2]; } _Sat unsigned short _Accum Susa3 (_Sat unsigned short _Accum args[]) { return args[3]; } _Sat unsigned short _Accum Susa4 (_Sat unsigned short _Accum args[]) { return args[4]; } _Sat unsigned short _Accum Susa5 (_Sat unsigned short _Accum args[]) { return args[5]; }
_Sat unsigned _Accum Sua0 (_Sat unsigned _Accum args[]) { return args[0]; } _Sat unsigned _Accum Sua1 (_Sat unsigned _Accum args[]) { return args[1]; } _Sat unsigned _Accum Sua2 (_Sat unsigned _Accum args[]) { return args[2]; } _Sat unsigned _Accum Sua3 (_Sat unsigned _Accum args[]) { return args[3]; } _Sat unsigned _Accum Sua4 (_Sat unsigned _Accum args[]) { return args[4]; } _Sat unsigned _Accum Sua5 (_Sat unsigned _Accum args[]) { return args[5]; }
_Sat unsigned long _Accum Sula0 (_Sat unsigned long _Accum args[]) { return args[0]; } _Sat unsigned long _Accum Sula1 (_Sat unsigned long _Accum args[]) { return args[1]; } _Sat unsigned long _Accum Sula2 (_Sat unsigned long _Accum args[]) { return args[2]; } _Sat unsigned long _Accum Sula3 (_Sat unsigned long _Accum args[]) { return args[3]; } _Sat unsigned long _Accum Sula4 (_Sat unsigned long _Accum args[]) { return args[4]; } _Sat unsigned long _Accum Sula5 (_Sat unsigned long _Accum args[]) { return args[5]; }
_Sat unsigned long long _Accum Sulla0 (_Sat unsigned long long _Accum args[]) { return args[0]; } _Sat unsigned long long _Accum Sulla1 (_Sat unsigned long long _Accum args[]) { return args[1]; } _Sat unsigned long long _Accum Sulla2 (_Sat unsigned long long _Accum args[]) { return args[2]; } _Sat unsigned long long _Accum Sulla3 (_Sat unsigned long long _Accum args[]) { return args[3]; } _Sat unsigned long long _Accum Sulla4 (_Sat unsigned long long _Accum args[]) { return args[4]; } _Sat unsigned long long _Accum Sulla5 (_Sat unsigned long long _Accum args[]) { return args[5]; }

int main()
{
# 68 "func-array.c"
  { short _Fract sf[] = { 0.0hr, 0.1hr, 0.2hr, 0.3hr, 0.4hr, 0.5hr }; if (sf0 (sf) != 0.0hr) abort (); if (sf1 (sf) != 0.1hr) abort (); if (sf2 (sf) != 0.2hr) abort (); if (sf3 (sf) != 0.3hr) abort (); if (sf4 (sf) != 0.4hr) abort (); if (sf5 (sf) != 0.5hr) abort (); }
  { _Fract f[] = { 0.0r, 0.1r, 0.2r, 0.3r, 0.4r, 0.5r }; if (f0 (f) != 0.0r) abort (); if (f1 (f) != 0.1r) abort (); if (f2 (f) != 0.2r) abort (); if (f3 (f) != 0.3r) abort (); if (f4 (f) != 0.4r) abort (); if (f5 (f) != 0.5r) abort (); }
  { long _Fract lf[] = { 0.0lr, 0.1lr, 0.2lr, 0.3lr, 0.4lr, 0.5lr }; if (lf0 (lf) != 0.0lr) abort (); if (lf1 (lf) != 0.1lr) abort (); if (lf2 (lf) != 0.2lr) abort (); if (lf3 (lf) != 0.3lr) abort (); if (lf4 (lf) != 0.4lr) abort (); if (lf5 (lf) != 0.5lr) abort (); }
  { long long _Fract llf[] = { 0.0llr, 0.1llr, 0.2llr, 0.3llr, 0.4llr, 0.5llr }; if (llf0 (llf) != 0.0llr) abort (); if (llf1 (llf) != 0.1llr) abort (); if (llf2 (llf) != 0.2llr) abort (); if (llf3 (llf) != 0.3llr) abort (); if (llf4 (llf) != 0.4llr) abort (); if (llf5 (llf) != 0.5llr) abort (); }
  { unsigned short _Fract usf[] = { 0.0uhr, 0.1uhr, 0.2uhr, 0.3uhr, 0.4uhr, 0.5uhr }; if (usf0 (usf) != 0.0uhr) abort (); if (usf1 (usf) != 0.1uhr) abort (); if (usf2 (usf) != 0.2uhr) abort (); if (usf3 (usf) != 0.3uhr) abort (); if (usf4 (usf) != 0.4uhr) abort (); if (usf5 (usf) != 0.5uhr) abort (); }
  { unsigned _Fract uf[] = { 0.0ur, 0.1ur, 0.2ur, 0.3ur, 0.4ur, 0.5ur }; if (uf0 (uf) != 0.0ur) abort (); if (uf1 (uf) != 0.1ur) abort (); if (uf2 (uf) != 0.2ur) abort (); if (uf3 (uf) != 0.3ur) abort (); if (uf4 (uf) != 0.4ur) abort (); if (uf5 (uf) != 0.5ur) abort (); }
  { unsigned long _Fract ulf[] = { 0.0ulr, 0.1ulr, 0.2ulr, 0.3ulr, 0.4ulr, 0.5ulr }; if (ulf0 (ulf) != 0.0ulr) abort (); if (ulf1 (ulf) != 0.1ulr) abort (); if (ulf2 (ulf) != 0.2ulr) abort (); if (ulf3 (ulf) != 0.3ulr) abort (); if (ulf4 (ulf) != 0.4ulr) abort (); if (ulf5 (ulf) != 0.5ulr) abort (); }
  { unsigned long long _Fract ullf[] = { 0.0ullr, 0.1ullr, 0.2ullr, 0.3ullr, 0.4ullr, 0.5ullr }; if (ullf0 (ullf) != 0.0ullr) abort (); if (ullf1 (ullf) != 0.1ullr) abort (); if (ullf2 (ullf) != 0.2ullr) abort (); if (ullf3 (ullf) != 0.3ullr) abort (); if (ullf4 (ullf) != 0.4ullr) abort (); if (ullf5 (ullf) != 0.5ullr) abort (); }
  { _Sat short _Fract Ssf[] = { 0.0hr, 0.1hr, 0.2hr, 0.3hr, 0.4hr, 0.5hr }; if (Ssf0 (Ssf) != 0.0hr) abort (); if (Ssf1 (Ssf) != 0.1hr) abort (); if (Ssf2 (Ssf) != 0.2hr) abort (); if (Ssf3 (Ssf) != 0.3hr) abort (); if (Ssf4 (Ssf) != 0.4hr) abort (); if (Ssf5 (Ssf) != 0.5hr) abort (); }
  { _Sat _Fract Sf[] = { 0.0r, 0.1r, 0.2r, 0.3r, 0.4r, 0.5r }; if (Sf0 (Sf) != 0.0r) abort (); if (Sf1 (Sf) != 0.1r) abort (); if (Sf2 (Sf) != 0.2r) abort (); if (Sf3 (Sf) != 0.3r) abort (); if (Sf4 (Sf) != 0.4r) abort (); if (Sf5 (Sf) != 0.5r) abort (); }
  { _Sat long _Fract Slf[] = { 0.0lr, 0.1lr, 0.2lr, 0.3lr, 0.4lr, 0.5lr }; if (Slf0 (Slf) != 0.0lr) abort (); if (Slf1 (Slf) != 0.1lr) abort (); if (Slf2 (Slf) != 0.2lr) abort (); if (Slf3 (Slf) != 0.3lr) abort (); if (Slf4 (Slf) != 0.4lr) abort (); if (Slf5 (Slf) != 0.5lr) abort (); }
  { _Sat long long _Fract Sllf[] = { 0.0llr, 0.1llr, 0.2llr, 0.3llr, 0.4llr, 0.5llr }; if (Sllf0 (Sllf) != 0.0llr) abort (); if (Sllf1 (Sllf) != 0.1llr) abort (); if (Sllf2 (Sllf) != 0.2llr) abort (); if (Sllf3 (Sllf) != 0.3llr) abort (); if (Sllf4 (Sllf) != 0.4llr) abort (); if (Sllf5 (Sllf) != 0.5llr) abort (); }
  { _Sat unsigned short _Fract Susf[] = { 0.0uhr, 0.1uhr, 0.2uhr, 0.3uhr, 0.4uhr, 0.5uhr }; if (Susf0 (Susf) != 0.0uhr) abort (); if (Susf1 (Susf) != 0.1uhr) abort (); if (Susf2 (Susf) != 0.2uhr) abort (); if (Susf3 (Susf) != 0.3uhr) abort (); if (Susf4 (Susf) != 0.4uhr) abort (); if (Susf5 (Susf) != 0.5uhr) abort (); }
  { _Sat unsigned _Fract Suf[] = { 0.0ur, 0.1ur, 0.2ur, 0.3ur, 0.4ur, 0.5ur }; if (Suf0 (Suf) != 0.0ur) abort (); if (Suf1 (Suf) != 0.1ur) abort (); if (Suf2 (Suf) != 0.2ur) abort (); if (Suf3 (Suf) != 0.3ur) abort (); if (Suf4 (Suf) != 0.4ur) abort (); if (Suf5 (Suf) != 0.5ur) abort (); }
  { _Sat unsigned long _Fract Sulf[] = { 0.0ulr, 0.1ulr, 0.2ulr, 0.3ulr, 0.4ulr, 0.5ulr }; if (Sulf0 (Sulf) != 0.0ulr) abort (); if (Sulf1 (Sulf) != 0.1ulr) abort (); if (Sulf2 (Sulf) != 0.2ulr) abort (); if (Sulf3 (Sulf) != 0.3ulr) abort (); if (Sulf4 (Sulf) != 0.4ulr) abort (); if (Sulf5 (Sulf) != 0.5ulr) abort (); }
  { _Sat unsigned long long _Fract Sullf[] = { 0.0ullr, 0.1ullr, 0.2ullr, 0.3ullr, 0.4ullr, 0.5ullr }; if (Sullf0 (Sullf) != 0.0ullr) abort (); if (Sullf1 (Sullf) != 0.1ullr) abort (); if (Sullf2 (Sullf) != 0.2ullr) abort (); if (Sullf3 (Sullf) != 0.3ullr) abort (); if (Sullf4 (Sullf) != 0.4ullr) abort (); if (Sullf5 (Sullf) != 0.5ullr) abort (); }
  { short _Accum sa[] = { 0.0hk, 0.1hk, 0.2hk, 0.3hk, 0.4hk, 0.5hk }; if (sa0 (sa) != 0.0hk) abort (); if (sa1 (sa) != 0.1hk) abort (); if (sa2 (sa) != 0.2hk) abort (); if (sa3 (sa) != 0.3hk) abort (); if (sa4 (sa) != 0.4hk) abort (); if (sa5 (sa) != 0.5hk) abort (); }
  { _Accum a[] = { 0.0k, 0.1k, 0.2k, 0.3k, 0.4k, 0.5k }; if (a0 (a) != 0.0k) abort (); if (a1 (a) != 0.1k) abort (); if (a2 (a) != 0.2k) abort (); if (a3 (a) != 0.3k) abort (); if (a4 (a) != 0.4k) abort (); if (a5 (a) != 0.5k) abort (); }
  { long _Accum la[] = { 0.0lk, 0.1lk, 0.2lk, 0.3lk, 0.4lk, 0.5lk }; if (la0 (la) != 0.0lk) abort (); if (la1 (la) != 0.1lk) abort (); if (la2 (la) != 0.2lk) abort (); if (la3 (la) != 0.3lk) abort (); if (la4 (la) != 0.4lk) abort (); if (la5 (la) != 0.5lk) abort (); }
  { long long _Accum lla[] = { 0.0llk, 0.1llk, 0.2llk, 0.3llk, 0.4llk, 0.5llk }; if (lla0 (lla) != 0.0llk) abort (); if (lla1 (lla) != 0.1llk) abort (); if (lla2 (lla) != 0.2llk) abort (); if (lla3 (lla) != 0.3llk) abort (); if (lla4 (lla) != 0.4llk) abort (); if (lla5 (lla) != 0.5llk) abort (); }
  { unsigned short _Accum usa[] = { 0.0uhk, 0.1uhk, 0.2uhk, 0.3uhk, 0.4uhk, 0.5uhk }; if (usa0 (usa) != 0.0uhk) abort (); if (usa1 (usa) != 0.1uhk) abort (); if (usa2 (usa) != 0.2uhk) abort (); if (usa3 (usa) != 0.3uhk) abort (); if (usa4 (usa) != 0.4uhk) abort (); if (usa5 (usa) != 0.5uhk) abort (); }
  { unsigned _Accum ua[] = { 0.0uk, 0.1uk, 0.2uk, 0.3uk, 0.4uk, 0.5uk }; if (ua0 (ua) != 0.0uk) abort (); if (ua1 (ua) != 0.1uk) abort (); if (ua2 (ua) != 0.2uk) abort (); if (ua3 (ua) != 0.3uk) abort (); if (ua4 (ua) != 0.4uk) abort (); if (ua5 (ua) != 0.5uk) abort (); }
  { unsigned long _Accum ula[] = { 0.0ulk, 0.1ulk, 0.2ulk, 0.3ulk, 0.4ulk, 0.5ulk }; if (ula0 (ula) != 0.0ulk) abort (); if (ula1 (ula) != 0.1ulk) abort (); if (ula2 (ula) != 0.2ulk) abort (); if (ula3 (ula) != 0.3ulk) abort (); if (ula4 (ula) != 0.4ulk) abort (); if (ula5 (ula) != 0.5ulk) abort (); }
  { unsigned long long _Accum ulla[] = { 0.0ullk, 0.1ullk, 0.2ullk, 0.3ullk, 0.4ullk, 0.5ullk }; if (ulla0 (ulla) != 0.0ullk) abort (); if (ulla1 (ulla) != 0.1ullk) abort (); if (ulla2 (ulla) != 0.2ullk) abort (); if (ulla3 (ulla) != 0.3ullk) abort (); if (ulla4 (ulla) != 0.4ullk) abort (); if (ulla5 (ulla) != 0.5ullk) abort (); }
  { _Sat short _Accum Ssa[] = { 0.0hk, 0.1hk, 0.2hk, 0.3hk, 0.4hk, 0.5hk }; if (Ssa0 (Ssa) != 0.0hk) abort (); if (Ssa1 (Ssa) != 0.1hk) abort (); if (Ssa2 (Ssa) != 0.2hk) abort (); if (Ssa3 (Ssa) != 0.3hk) abort (); if (Ssa4 (Ssa) != 0.4hk) abort (); if (Ssa5 (Ssa) != 0.5hk) abort (); }
  { _Sat _Accum Sa[] = { 0.0k, 0.1k, 0.2k, 0.3k, 0.4k, 0.5k }; if (Sa0 (Sa) != 0.0k) abort (); if (Sa1 (Sa) != 0.1k) abort (); if (Sa2 (Sa) != 0.2k) abort (); if (Sa3 (Sa) != 0.3k) abort (); if (Sa4 (Sa) != 0.4k) abort (); if (Sa5 (Sa) != 0.5k) abort (); }
  { _Sat long _Accum Sla[] = { 0.0lk, 0.1lk, 0.2lk, 0.3lk, 0.4lk, 0.5lk }; if (Sla0 (Sla) != 0.0lk) abort (); if (Sla1 (Sla) != 0.1lk) abort (); if (Sla2 (Sla) != 0.2lk) abort (); if (Sla3 (Sla) != 0.3lk) abort (); if (Sla4 (Sla) != 0.4lk) abort (); if (Sla5 (Sla) != 0.5lk) abort (); }
  { _Sat long long _Accum Slla[] = { 0.0llk, 0.1llk, 0.2llk, 0.3llk, 0.4llk, 0.5llk }; if (Slla0 (Slla) != 0.0llk) abort (); if (Slla1 (Slla) != 0.1llk) abort (); if (Slla2 (Slla) != 0.2llk) abort (); if (Slla3 (Slla) != 0.3llk) abort (); if (Slla4 (Slla) != 0.4llk) abort (); if (Slla5 (Slla) != 0.5llk) abort (); }
  { _Sat unsigned short _Accum Susa[] = { 0.0uhk, 0.1uhk, 0.2uhk, 0.3uhk, 0.4uhk, 0.5uhk }; if (Susa0 (Susa) != 0.0uhk) abort (); if (Susa1 (Susa) != 0.1uhk) abort (); if (Susa2 (Susa) != 0.2uhk) abort (); if (Susa3 (Susa) != 0.3uhk) abort (); if (Susa4 (Susa) != 0.4uhk) abort (); if (Susa5 (Susa) != 0.5uhk) abort (); }
  { _Sat unsigned _Accum Sua[] = { 0.0uk, 0.1uk, 0.2uk, 0.3uk, 0.4uk, 0.5uk }; if (Sua0 (Sua) != 0.0uk) abort (); if (Sua1 (Sua) != 0.1uk) abort (); if (Sua2 (Sua) != 0.2uk) abort (); if (Sua3 (Sua) != 0.3uk) abort (); if (Sua4 (Sua) != 0.4uk) abort (); if (Sua5 (Sua) != 0.5uk) abort (); }
  { _Sat unsigned long _Accum Sula[] = { 0.0ulk, 0.1ulk, 0.2ulk, 0.3ulk, 0.4ulk, 0.5ulk }; if (Sula0 (Sula) != 0.0ulk) abort (); if (Sula1 (Sula) != 0.1ulk) abort (); if (Sula2 (Sula) != 0.2ulk) abort (); if (Sula3 (Sula) != 0.3ulk) abort (); if (Sula4 (Sula) != 0.4ulk) abort (); if (Sula5 (Sula) != 0.5ulk) abort (); }
  { _Sat unsigned long long _Accum Sulla[] = { 0.0ullk, 0.1ullk, 0.2ullk, 0.3ullk, 0.4ullk, 0.5ullk }; if (Sulla0 (Sulla) != 0.0ullk) abort (); if (Sulla1 (Sulla) != 0.1ullk) abort (); if (Sulla2 (Sulla) != 0.2ullk) abort (); if (Sulla3 (Sulla) != 0.3ullk) abort (); if (Sulla4 (Sulla) != 0.4ullk) abort (); if (Sulla5 (Sulla) != 0.5ullk) abort (); }

  return 0;
}
