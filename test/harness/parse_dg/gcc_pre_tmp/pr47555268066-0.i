# 1 "pr47555.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "pr47555.c"






void uncompact(unsigned char* ptrRGB, const unsigned int* ptrSrc, const unsigned char* ptrRGBcompact, int line, int nbPixLeft)
{
# 19 "pr47555.c"
  int x;
  unsigned int v, *ptrSrc32bits=(unsigned int*)ptrSrc;
  unsigned short v16,*ptrSrc16bits;

  for(x=0; x<line; x++) {
    v = *ptrSrc32bits++;
    if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1;
    if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1;
    if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1;
    if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1; if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v >>= 1;
  }

  ptrSrc16bits=(unsigned short *)ptrSrc32bits;
  v16 = *ptrSrc16bits++;
  if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1; if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1; if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1; if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1; if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1; if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1;
  if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1; if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1; if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1; if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1; if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1; if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } else{ *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0; } v16 >>= 1;

}
