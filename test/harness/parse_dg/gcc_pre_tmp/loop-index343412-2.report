Failed to parse loop-index.c
with message:
Syntax error !The symbol `d' does not fit here. ("loop-index.c": line 21)
/* No Input */
Working dir: /home/noah/src/package-sources/language-c/test/harness/parse_dg
Preprocessed input follows:

# 1 "loop-index.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "loop-index.c"






extern void abort (void);
# 21 "loop-index.c"
void sf (void) { short _Fract d; int i; for (d = 0.1hr, i = 0; d <= 0.8hr; d += 0.1hr) i++; if (i != 8) abort(); }
void f (void) { _Fract d; int i; for (d = 0.1r, i = 0; d <= 0.8r; d += 0.1r) i++; if (i != 8) abort(); }
void lf (void) { long _Fract d; int i; for (d = 0.1lr, i = 0; d <= 0.8lr; d += 0.1lr) i++; if (i != 8) abort(); }
void llf (void) { long long _Fract d; int i; for (d = 0.1llr, i = 0; d <= 0.8llr; d += 0.1llr) i++; if (i != 8) abort(); }
void usf (void) { unsigned short _Fract d; int i; for (d = 0.1uhr, i = 0; d <= 0.8uhr; d += 0.1uhr) i++; if (i != 8) abort(); }
void uf (void) { unsigned _Fract d; int i; for (d = 0.1ur, i = 0; d <= 0.8ur; d += 0.1ur) i++; if (i != 8) abort(); }
void ulf (void) { unsigned long _Fract d; int i; for (d = 0.1ulr, i = 0; d <= 0.8ulr; d += 0.1ulr) i++; if (i != 8) abort(); }
void ullf (void) { unsigned long long _Fract d; int i; for (d = 0.1ullr, i = 0; d <= 0.8ullr; d += 0.1ullr) i++; if (i != 8) abort(); }
void Ssf (void) { _Sat short _Fract d; int i; for (d = 0.1hr, i = 0; d <= 0.8hr; d += 0.1hr) i++; if (i != 8) abort(); }
void Sf (void) { _Sat _Fract d; int i; for (d = 0.1r, i = 0; d <= 0.8r; d += 0.1r) i++; if (i != 8) abort(); }
void Slf (void) { _Sat long _Fract d; int i; for (d = 0.1lr, i = 0; d <= 0.8lr; d += 0.1lr) i++; if (i != 8) abort(); }
void Sllf (void) { _Sat long long _Fract d; int i; for (d = 0.1llr, i = 0; d <= 0.8llr; d += 0.1llr) i++; if (i != 8) abort(); }
void Susf (void) { _Sat unsigned short _Fract d; int i; for (d = 0.1uhr, i = 0; d <= 0.8uhr; d += 0.1uhr) i++; if (i != 8) abort(); }
void Suf (void) { _Sat unsigned _Fract d; int i; for (d = 0.1ur, i = 0; d <= 0.8ur; d += 0.1ur) i++; if (i != 8) abort(); }
void Sulf (void) { _Sat unsigned long _Fract d; int i; for (d = 0.1ulr, i = 0; d <= 0.8ulr; d += 0.1ulr) i++; if (i != 8) abort(); }
void Sullf (void) { _Sat unsigned long long _Fract d; int i; for (d = 0.1ullr, i = 0; d <= 0.8ullr; d += 0.1ullr) i++; if (i != 8) abort(); }
void sa (void) { short _Accum d; int i; for (d = 0.1hk, i = 0; d <= 0.8hk; d += 0.1hk) i++; if (i != 8) abort(); }
void a (void) { _Accum d; int i; for (d = 0.1k, i = 0; d <= 0.8k; d += 0.1k) i++; if (i != 8) abort(); }
void la (void) { long _Accum d; int i; for (d = 0.1lk, i = 0; d <= 0.8lk; d += 0.1lk) i++; if (i != 8) abort(); }
void lla (void) { long long _Accum d; int i; for (d = 0.1llk, i = 0; d <= 0.8llk; d += 0.1llk) i++; if (i != 8) abort(); }
void usa (void) { unsigned short _Accum d; int i; for (d = 0.1uhk, i = 0; d <= 0.8uhk; d += 0.1uhk) i++; if (i != 8) abort(); }
void ua (void) { unsigned _Accum d; int i; for (d = 0.1uk, i = 0; d <= 0.8uk; d += 0.1uk) i++; if (i != 8) abort(); }
void ula (void) { unsigned long _Accum d; int i; for (d = 0.1ulk, i = 0; d <= 0.8ulk; d += 0.1ulk) i++; if (i != 8) abort(); }
void ulla (void) { unsigned long long _Accum d; int i; for (d = 0.1ullk, i = 0; d <= 0.8ullk; d += 0.1ullk) i++; if (i != 8) abort(); }
void Ssa (void) { _Sat short _Accum d; int i; for (d = 0.1hk, i = 0; d <= 0.8hk; d += 0.1hk) i++; if (i != 8) abort(); }
void Sa (void) { _Sat _Accum d; int i; for (d = 0.1k, i = 0; d <= 0.8k; d += 0.1k) i++; if (i != 8) abort(); }
void Sla (void) { _Sat long _Accum d; int i; for (d = 0.1lk, i = 0; d <= 0.8lk; d += 0.1lk) i++; if (i != 8) abort(); }
void Slla (void) { _Sat long long _Accum d; int i; for (d = 0.1llk, i = 0; d <= 0.8llk; d += 0.1llk) i++; if (i != 8) abort(); }
void Susa (void) { _Sat unsigned short _Accum d; int i; for (d = 0.1uhk, i = 0; d <= 0.8uhk; d += 0.1uhk) i++; if (i != 8) abort(); }
void Sua (void) { _Sat unsigned _Accum d; int i; for (d = 0.1uk, i = 0; d <= 0.8uk; d += 0.1uk) i++; if (i != 8) abort(); }
void Sula (void) { _Sat unsigned long _Accum d; int i; for (d = 0.1ulk, i = 0; d <= 0.8ulk; d += 0.1ulk) i++; if (i != 8) abort(); }
void Sulla (void) { _Sat unsigned long long _Accum d; int i; for (d = 0.1ullk, i = 0; d <= 0.8ullk; d += 0.1ullk) i++; if (i != 8) abort(); }

int
main ()
{
  sf ();
  f ();
  lf ();
  llf ();
  usf ();
  uf ();
  ulf ();
  ullf ();
  Ssf ();
  Sf ();
  Slf ();
  Sllf ();
  Susf ();
  Suf ();
  Sulf ();
  Sullf ();
  sa ();
  a ();
  la ();
  lla ();
  usa ();
  ua ();
  ula ();
  ulla ();
  Ssa ();
  Sa ();
  Sla ();
  Slla ();
  Susa ();
  Sua ();
  Sula ();
  Sulla ();

  return 0;
}
