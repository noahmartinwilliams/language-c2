Failed to parse float-cast-overflow-atomic.c
with message:
Syntax error !The symbol `_Bool' does not fit here. ("float-cast-overflow-atomic.c": line 67)
/* No Input */
Working dir: /home/noah/src/package-sources/language-c/test/harness/parse_dg
Preprocessed input follows:

# 1 "float-cast-overflow-atomic.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "float-cast-overflow-atomic.c"





extern void abort (void);
extern void exit (int);
# 64 "float-cast-overflow-atomic.c"
static void
test_mult (void)
{
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((1)); if ((a *= ((2))) != (_Bool) ((_Bool) ((1)) * ((2)))) abort (); if (a != (_Bool) ((_Bool) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((1)); if ((a *= ((2))) != (char) ((char) ((1)) * ((2)))) abort (); if (a != (char) ((char) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((1)); if ((a *= ((2))) != (signed char) ((signed char) ((1)) * ((2)))) abort (); if (a != (signed char) ((signed char) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((1)); if ((a *= ((2))) != (unsigned char) ((unsigned char) ((1)) * ((2)))) abort (); if (a != (unsigned char) ((unsigned char) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((1)); if ((a *= ((2))) != (signed short) ((signed short) ((1)) * ((2)))) abort (); if (a != (signed short) ((signed short) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((1)); if ((a *= ((2))) != (unsigned short) ((unsigned short) ((1)) * ((2)))) abort (); if (a != (unsigned short) ((unsigned short) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((1)); if ((a *= ((2))) != (signed int) ((signed int) ((1)) * ((2)))) abort (); if (a != (signed int) ((signed int) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((1)); if ((a *= ((2))) != (unsigned int) ((unsigned int) ((1)) * ((2)))) abort (); if (a != (unsigned int) ((unsigned int) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((1)); if ((a *= ((2))) != (signed long) ((signed long) ((1)) * ((2)))) abort (); if (a != (signed long) ((signed long) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((1)); if ((a *= ((2))) != (unsigned long) ((unsigned long) ((1)) * ((2)))) abort (); if (a != (unsigned long) ((unsigned long) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((1)); if ((a *= ((2))) != (signed long long) ((signed long long) ((1)) * ((2)))) abort (); if (a != (signed long long) ((signed long long) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((1)); if ((a *= ((2))) != (unsigned long long) ((unsigned long long) ((1)) * ((2)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((1)); if ((a *= ((2))) != (float) ((float) ((1)) * ((2)))) abort (); if (a != (float) ((float) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((1)); if ((a *= ((2))) != (double) ((double) ((1)) * ((2)))) abort (); if (a != (double) ((double) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((1)); if ((a *= ((2))) != (long double) ((long double) ((1)) * ((2)))) abort (); if (a != (long double) ((long double) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((1)); if ((a *= ((2))) != (_Complex float) ((_Complex float) ((1)) * ((2)))) abort (); if (a != (_Complex float) ((_Complex float) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((1)); if ((a *= ((2))) != (_Complex double) ((_Complex double) ((1)) * ((2)))) abort (); if (a != (_Complex double) ((_Complex double) ((1)) * ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((1)); if ((a *= ((2))) != (_Complex long double) ((_Complex long double) ((1)) * ((2)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((1)) * ((2)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-3)); if ((a *= ((5))) != (_Bool) ((_Bool) ((-3)) * ((5)))) abort (); if (a != (_Bool) ((_Bool) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-3)); if ((a *= ((5))) != (char) ((char) ((-3)) * ((5)))) abort (); if (a != (char) ((char) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-3)); if ((a *= ((5))) != (signed char) ((signed char) ((-3)) * ((5)))) abort (); if (a != (signed char) ((signed char) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-3)); if ((a *= ((5))) != (unsigned char) ((unsigned char) ((-3)) * ((5)))) abort (); if (a != (unsigned char) ((unsigned char) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-3)); if ((a *= ((5))) != (signed short) ((signed short) ((-3)) * ((5)))) abort (); if (a != (signed short) ((signed short) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-3)); if ((a *= ((5))) != (unsigned short) ((unsigned short) ((-3)) * ((5)))) abort (); if (a != (unsigned short) ((unsigned short) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-3)); if ((a *= ((5))) != (signed int) ((signed int) ((-3)) * ((5)))) abort (); if (a != (signed int) ((signed int) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-3)); if ((a *= ((5))) != (unsigned int) ((unsigned int) ((-3)) * ((5)))) abort (); if (a != (unsigned int) ((unsigned int) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-3)); if ((a *= ((5))) != (signed long) ((signed long) ((-3)) * ((5)))) abort (); if (a != (signed long) ((signed long) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-3)); if ((a *= ((5))) != (unsigned long) ((unsigned long) ((-3)) * ((5)))) abort (); if (a != (unsigned long) ((unsigned long) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-3)); if ((a *= ((5))) != (signed long long) ((signed long long) ((-3)) * ((5)))) abort (); if (a != (signed long long) ((signed long long) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-3)); if ((a *= ((5))) != (unsigned long long) ((unsigned long long) ((-3)) * ((5)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((-3)); if ((a *= ((5))) != (float) ((float) ((-3)) * ((5)))) abort (); if (a != (float) ((float) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((-3)); if ((a *= ((5))) != (double) ((double) ((-3)) * ((5)))) abort (); if (a != (double) ((double) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((-3)); if ((a *= ((5))) != (long double) ((long double) ((-3)) * ((5)))) abort (); if (a != (long double) ((long double) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((-3)); if ((a *= ((5))) != (_Complex float) ((_Complex float) ((-3)) * ((5)))) abort (); if (a != (_Complex float) ((_Complex float) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((-3)); if ((a *= ((5))) != (_Complex double) ((_Complex double) ((-3)) * ((5)))) abort (); if (a != (_Complex double) ((_Complex double) ((-3)) * ((5)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((-3)); if ((a *= ((5))) != (_Complex long double) ((_Complex long double) ((-3)) * ((5)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((-3)) * ((5)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-7)); if ((a *= ((-20))) != (_Bool) ((_Bool) ((-7)) * ((-20)))) abort (); if (a != (_Bool) ((_Bool) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-7)); if ((a *= ((-20))) != (char) ((char) ((-7)) * ((-20)))) abort (); if (a != (char) ((char) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-7)); if ((a *= ((-20))) != (signed char) ((signed char) ((-7)) * ((-20)))) abort (); if (a != (signed char) ((signed char) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-7)); if ((a *= ((-20))) != (unsigned char) ((unsigned char) ((-7)) * ((-20)))) abort (); if (a != (unsigned char) ((unsigned char) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-7)); if ((a *= ((-20))) != (signed short) ((signed short) ((-7)) * ((-20)))) abort (); if (a != (signed short) ((signed short) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-7)); if ((a *= ((-20))) != (unsigned short) ((unsigned short) ((-7)) * ((-20)))) abort (); if (a != (unsigned short) ((unsigned short) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-7)); if ((a *= ((-20))) != (signed int) ((signed int) ((-7)) * ((-20)))) abort (); if (a != (signed int) ((signed int) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-7)); if ((a *= ((-20))) != (unsigned int) ((unsigned int) ((-7)) * ((-20)))) abort (); if (a != (unsigned int) ((unsigned int) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-7)); if ((a *= ((-20))) != (signed long) ((signed long) ((-7)) * ((-20)))) abort (); if (a != (signed long) ((signed long) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-7)); if ((a *= ((-20))) != (unsigned long) ((unsigned long) ((-7)) * ((-20)))) abort (); if (a != (unsigned long) ((unsigned long) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-7)); if ((a *= ((-20))) != (signed long long) ((signed long long) ((-7)) * ((-20)))) abort (); if (a != (signed long long) ((signed long long) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-7)); if ((a *= ((-20))) != (unsigned long long) ((unsigned long long) ((-7)) * ((-20)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((-7)); if ((a *= ((-20))) != (float) ((float) ((-7)) * ((-20)))) abort (); if (a != (float) ((float) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((-7)); if ((a *= ((-20))) != (double) ((double) ((-7)) * ((-20)))) abort (); if (a != (double) ((double) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((-7)); if ((a *= ((-20))) != (long double) ((long double) ((-7)) * ((-20)))) abort (); if (a != (long double) ((long double) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((-7)); if ((a *= ((-20))) != (_Complex float) ((_Complex float) ((-7)) * ((-20)))) abort (); if (a != (_Complex float) ((_Complex float) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((-7)); if ((a *= ((-20))) != (_Complex double) ((_Complex double) ((-7)) * ((-20)))) abort (); if (a != (_Complex double) ((_Complex double) ((-7)) * ((-20)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((-7)); if ((a *= ((-20))) != (_Complex long double) ((_Complex long double) ((-7)) * ((-20)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((-7)) * ((-20)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((1.25)); if ((a *= ((3.5))) != (_Bool) ((_Bool) ((1.25)) * ((3.5)))) abort (); if (a != (_Bool) ((_Bool) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((1.25)); if ((a *= ((3.5))) != (char) ((char) ((1.25)) * ((3.5)))) abort (); if (a != (char) ((char) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((1.25)); if ((a *= ((3.5))) != (signed char) ((signed char) ((1.25)) * ((3.5)))) abort (); if (a != (signed char) ((signed char) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((1.25)); if ((a *= ((3.5))) != (unsigned char) ((unsigned char) ((1.25)) * ((3.5)))) abort (); if (a != (unsigned char) ((unsigned char) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((1.25)); if ((a *= ((3.5))) != (signed short) ((signed short) ((1.25)) * ((3.5)))) abort (); if (a != (signed short) ((signed short) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((1.25)); if ((a *= ((3.5))) != (unsigned short) ((unsigned short) ((1.25)) * ((3.5)))) abort (); if (a != (unsigned short) ((unsigned short) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((1.25)); if ((a *= ((3.5))) != (signed int) ((signed int) ((1.25)) * ((3.5)))) abort (); if (a != (signed int) ((signed int) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((1.25)); if ((a *= ((3.5))) != (unsigned int) ((unsigned int) ((1.25)) * ((3.5)))) abort (); if (a != (unsigned int) ((unsigned int) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((1.25)); if ((a *= ((3.5))) != (signed long) ((signed long) ((1.25)) * ((3.5)))) abort (); if (a != (signed long) ((signed long) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((1.25)); if ((a *= ((3.5))) != (unsigned long) ((unsigned long) ((1.25)) * ((3.5)))) abort (); if (a != (unsigned long) ((unsigned long) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((1.25)); if ((a *= ((3.5))) != (signed long long) ((signed long long) ((1.25)) * ((3.5)))) abort (); if (a != (signed long long) ((signed long long) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((1.25)); if ((a *= ((3.5))) != (unsigned long long) ((unsigned long long) ((1.25)) * ((3.5)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((1.25)); if ((a *= ((3.5))) != (float) ((float) ((1.25)) * ((3.5)))) abort (); if (a != (float) ((float) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((1.25)); if ((a *= ((3.5))) != (double) ((double) ((1.25)) * ((3.5)))) abort (); if (a != (double) ((double) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((1.25)); if ((a *= ((3.5))) != (long double) ((long double) ((1.25)) * ((3.5)))) abort (); if (a != (long double) ((long double) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((1.25)); if ((a *= ((3.5))) != (_Complex float) ((_Complex float) ((1.25)) * ((3.5)))) abort (); if (a != (_Complex float) ((_Complex float) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((1.25)); if ((a *= ((3.5))) != (_Complex double) ((_Complex double) ((1.25)) * ((3.5)))) abort (); if (a != (_Complex double) ((_Complex double) ((1.25)) * ((3.5)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((1.25)); if ((a *= ((3.5))) != (_Complex long double) ((_Complex long double) ((1.25)) * ((3.5)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((1.25)) * ((3.5)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (_Bool) ((_Bool) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (_Bool) ((_Bool) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (char) ((char) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (char) ((char) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (signed char) ((signed char) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (signed char) ((signed char) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (unsigned char) ((unsigned char) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (unsigned char) ((unsigned char) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (signed short) ((signed short) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (signed short) ((signed short) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (unsigned short) ((unsigned short) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (unsigned short) ((unsigned short) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (signed int) ((signed int) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (signed int) ((signed int) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (unsigned int) ((unsigned int) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (unsigned int) ((unsigned int) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (signed long) ((signed long) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (signed long) ((signed long) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (unsigned long) ((unsigned long) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (unsigned long) ((unsigned long) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (signed long long) ((signed long long) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (signed long long) ((signed long long) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (float) ((float) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (float) ((float) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (double) ((double) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (double) ((double) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (long double) ((long double) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (long double) ((long double) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (_Complex float) ((_Complex float) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (_Complex float) ((_Complex float) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (_Complex double) ((_Complex double) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (_Complex double) ((_Complex double) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((__builtin_complex ((3.5), (4.5))))) != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.5), (2.5)))) * ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (_Bool) ((_Bool) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (_Bool) ((_Bool) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (char) ((char) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (char) ((char) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (signed char) ((signed char) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (signed char) ((signed char) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (unsigned char) ((unsigned char) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (unsigned char) ((unsigned char) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (signed short) ((signed short) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (signed short) ((signed short) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (unsigned short) ((unsigned short) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (unsigned short) ((unsigned short) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (signed int) ((signed int) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (signed int) ((signed int) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (unsigned int) ((unsigned int) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (unsigned int) ((unsigned int) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (signed long) ((signed long) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (signed long) ((signed long) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (unsigned long) ((unsigned long) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (unsigned long) ((unsigned long) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (signed long long) ((signed long long) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (signed long long) ((signed long long) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (float) ((float) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (float) ((float) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (double) ((double) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (double) ((double) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (long double) ((long double) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (long double) ((long double) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (_Complex float) ((_Complex float) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (_Complex float) ((_Complex float) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (_Complex double) ((_Complex double) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (_Complex double) ((_Complex double) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((__builtin_complex ((1.5), (2.5)))); if ((a *= ((2))) != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.5), (2.5)))) * ((2)))) abort (); } while (0); } while (0);
}

static void
test_div (void)
{
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((1)); if ((a /= ((2))) != (_Bool) ((_Bool) ((1)) / ((2)))) abort (); if (a != (_Bool) ((_Bool) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((1)); if ((a /= ((2))) != (char) ((char) ((1)) / ((2)))) abort (); if (a != (char) ((char) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((1)); if ((a /= ((2))) != (signed char) ((signed char) ((1)) / ((2)))) abort (); if (a != (signed char) ((signed char) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((1)); if ((a /= ((2))) != (unsigned char) ((unsigned char) ((1)) / ((2)))) abort (); if (a != (unsigned char) ((unsigned char) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((1)); if ((a /= ((2))) != (signed short) ((signed short) ((1)) / ((2)))) abort (); if (a != (signed short) ((signed short) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((1)); if ((a /= ((2))) != (unsigned short) ((unsigned short) ((1)) / ((2)))) abort (); if (a != (unsigned short) ((unsigned short) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((1)); if ((a /= ((2))) != (signed int) ((signed int) ((1)) / ((2)))) abort (); if (a != (signed int) ((signed int) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((1)); if ((a /= ((2))) != (unsigned int) ((unsigned int) ((1)) / ((2)))) abort (); if (a != (unsigned int) ((unsigned int) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((1)); if ((a /= ((2))) != (signed long) ((signed long) ((1)) / ((2)))) abort (); if (a != (signed long) ((signed long) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((1)); if ((a /= ((2))) != (unsigned long) ((unsigned long) ((1)) / ((2)))) abort (); if (a != (unsigned long) ((unsigned long) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((1)); if ((a /= ((2))) != (signed long long) ((signed long long) ((1)) / ((2)))) abort (); if (a != (signed long long) ((signed long long) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((1)); if ((a /= ((2))) != (unsigned long long) ((unsigned long long) ((1)) / ((2)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((1)); if ((a /= ((2))) != (float) ((float) ((1)) / ((2)))) abort (); if (a != (float) ((float) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((1)); if ((a /= ((2))) != (double) ((double) ((1)) / ((2)))) abort (); if (a != (double) ((double) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((1)); if ((a /= ((2))) != (long double) ((long double) ((1)) / ((2)))) abort (); if (a != (long double) ((long double) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((1)); if ((a /= ((2))) != (_Complex float) ((_Complex float) ((1)) / ((2)))) abort (); if (a != (_Complex float) ((_Complex float) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((1)); if ((a /= ((2))) != (_Complex double) ((_Complex double) ((1)) / ((2)))) abort (); if (a != (_Complex double) ((_Complex double) ((1)) / ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((1)); if ((a /= ((2))) != (_Complex long double) ((_Complex long double) ((1)) / ((2)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((1)) / ((2)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-6)); if ((a /= ((3))) != (_Bool) ((_Bool) ((-6)) / ((3)))) abort (); if (a != (_Bool) ((_Bool) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-6)); if ((a /= ((3))) != (char) ((char) ((-6)) / ((3)))) abort (); if (a != (char) ((char) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-6)); if ((a /= ((3))) != (signed char) ((signed char) ((-6)) / ((3)))) abort (); if (a != (signed char) ((signed char) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-6)); if ((a /= ((3))) != (unsigned char) ((unsigned char) ((-6)) / ((3)))) abort (); if (a != (unsigned char) ((unsigned char) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-6)); if ((a /= ((3))) != (signed short) ((signed short) ((-6)) / ((3)))) abort (); if (a != (signed short) ((signed short) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-6)); if ((a /= ((3))) != (unsigned short) ((unsigned short) ((-6)) / ((3)))) abort (); if (a != (unsigned short) ((unsigned short) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-6)); if ((a /= ((3))) != (signed int) ((signed int) ((-6)) / ((3)))) abort (); if (a != (signed int) ((signed int) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-6)); if ((a /= ((3))) != (unsigned int) ((unsigned int) ((-6)) / ((3)))) abort (); if (a != (unsigned int) ((unsigned int) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-6)); if ((a /= ((3))) != (signed long) ((signed long) ((-6)) / ((3)))) abort (); if (a != (signed long) ((signed long) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-6)); if ((a /= ((3))) != (unsigned long) ((unsigned long) ((-6)) / ((3)))) abort (); if (a != (unsigned long) ((unsigned long) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-6)); if ((a /= ((3))) != (signed long long) ((signed long long) ((-6)) / ((3)))) abort (); if (a != (signed long long) ((signed long long) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-6)); if ((a /= ((3))) != (unsigned long long) ((unsigned long long) ((-6)) / ((3)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((-6)); if ((a /= ((3))) != (float) ((float) ((-6)) / ((3)))) abort (); if (a != (float) ((float) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((-6)); if ((a /= ((3))) != (double) ((double) ((-6)) / ((3)))) abort (); if (a != (double) ((double) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((-6)); if ((a /= ((3))) != (long double) ((long double) ((-6)) / ((3)))) abort (); if (a != (long double) ((long double) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((-6)); if ((a /= ((3))) != (_Complex float) ((_Complex float) ((-6)) / ((3)))) abort (); if (a != (_Complex float) ((_Complex float) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((-6)); if ((a /= ((3))) != (_Complex double) ((_Complex double) ((-6)) / ((3)))) abort (); if (a != (_Complex double) ((_Complex double) ((-6)) / ((3)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((-6)); if ((a /= ((3))) != (_Complex long double) ((_Complex long double) ((-6)) / ((3)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((-6)) / ((3)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-70)); if ((a /= ((-10))) != (_Bool) ((_Bool) ((-70)) / ((-10)))) abort (); if (a != (_Bool) ((_Bool) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-70)); if ((a /= ((-10))) != (char) ((char) ((-70)) / ((-10)))) abort (); if (a != (char) ((char) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-70)); if ((a /= ((-10))) != (signed char) ((signed char) ((-70)) / ((-10)))) abort (); if (a != (signed char) ((signed char) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-70)); if ((a /= ((-10))) != (unsigned char) ((unsigned char) ((-70)) / ((-10)))) abort (); if (a != (unsigned char) ((unsigned char) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-70)); if ((a /= ((-10))) != (signed short) ((signed short) ((-70)) / ((-10)))) abort (); if (a != (signed short) ((signed short) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-70)); if ((a /= ((-10))) != (unsigned short) ((unsigned short) ((-70)) / ((-10)))) abort (); if (a != (unsigned short) ((unsigned short) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-70)); if ((a /= ((-10))) != (signed int) ((signed int) ((-70)) / ((-10)))) abort (); if (a != (signed int) ((signed int) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-70)); if ((a /= ((-10))) != (unsigned int) ((unsigned int) ((-70)) / ((-10)))) abort (); if (a != (unsigned int) ((unsigned int) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-70)); if ((a /= ((-10))) != (signed long) ((signed long) ((-70)) / ((-10)))) abort (); if (a != (signed long) ((signed long) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-70)); if ((a /= ((-10))) != (unsigned long) ((unsigned long) ((-70)) / ((-10)))) abort (); if (a != (unsigned long) ((unsigned long) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-70)); if ((a /= ((-10))) != (signed long long) ((signed long long) ((-70)) / ((-10)))) abort (); if (a != (signed long long) ((signed long long) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-70)); if ((a /= ((-10))) != (unsigned long long) ((unsigned long long) ((-70)) / ((-10)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((-70)); if ((a /= ((-10))) != (float) ((float) ((-70)) / ((-10)))) abort (); if (a != (float) ((float) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((-70)); if ((a /= ((-10))) != (double) ((double) ((-70)) / ((-10)))) abort (); if (a != (double) ((double) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((-70)); if ((a /= ((-10))) != (long double) ((long double) ((-70)) / ((-10)))) abort (); if (a != (long double) ((long double) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((-70)); if ((a /= ((-10))) != (_Complex float) ((_Complex float) ((-70)) / ((-10)))) abort (); if (a != (_Complex float) ((_Complex float) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((-70)); if ((a /= ((-10))) != (_Complex double) ((_Complex double) ((-70)) / ((-10)))) abort (); if (a != (_Complex double) ((_Complex double) ((-70)) / ((-10)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((-70)); if ((a /= ((-10))) != (_Complex long double) ((_Complex long double) ((-70)) / ((-10)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((-70)) / ((-10)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((1.25)); if ((a /= ((2.5))) != (_Bool) ((_Bool) ((1.25)) / ((2.5)))) abort (); if (a != (_Bool) ((_Bool) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((1.25)); if ((a /= ((2.5))) != (char) ((char) ((1.25)) / ((2.5)))) abort (); if (a != (char) ((char) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((1.25)); if ((a /= ((2.5))) != (signed char) ((signed char) ((1.25)) / ((2.5)))) abort (); if (a != (signed char) ((signed char) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((1.25)); if ((a /= ((2.5))) != (unsigned char) ((unsigned char) ((1.25)) / ((2.5)))) abort (); if (a != (unsigned char) ((unsigned char) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((1.25)); if ((a /= ((2.5))) != (signed short) ((signed short) ((1.25)) / ((2.5)))) abort (); if (a != (signed short) ((signed short) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((1.25)); if ((a /= ((2.5))) != (unsigned short) ((unsigned short) ((1.25)) / ((2.5)))) abort (); if (a != (unsigned short) ((unsigned short) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((1.25)); if ((a /= ((2.5))) != (signed int) ((signed int) ((1.25)) / ((2.5)))) abort (); if (a != (signed int) ((signed int) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((1.25)); if ((a /= ((2.5))) != (unsigned int) ((unsigned int) ((1.25)) / ((2.5)))) abort (); if (a != (unsigned int) ((unsigned int) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((1.25)); if ((a /= ((2.5))) != (signed long) ((signed long) ((1.25)) / ((2.5)))) abort (); if (a != (signed long) ((signed long) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((1.25)); if ((a /= ((2.5))) != (unsigned long) ((unsigned long) ((1.25)) / ((2.5)))) abort (); if (a != (unsigned long) ((unsigned long) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((1.25)); if ((a /= ((2.5))) != (signed long long) ((signed long long) ((1.25)) / ((2.5)))) abort (); if (a != (signed long long) ((signed long long) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((1.25)); if ((a /= ((2.5))) != (unsigned long long) ((unsigned long long) ((1.25)) / ((2.5)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((1.25)); if ((a /= ((2.5))) != (float) ((float) ((1.25)) / ((2.5)))) abort (); if (a != (float) ((float) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((1.25)); if ((a /= ((2.5))) != (double) ((double) ((1.25)) / ((2.5)))) abort (); if (a != (double) ((double) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((1.25)); if ((a /= ((2.5))) != (long double) ((long double) ((1.25)) / ((2.5)))) abort (); if (a != (long double) ((long double) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((1.25)); if ((a /= ((2.5))) != (_Complex float) ((_Complex float) ((1.25)) / ((2.5)))) abort (); if (a != (_Complex float) ((_Complex float) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((1.25)); if ((a /= ((2.5))) != (_Complex double) ((_Complex double) ((1.25)) / ((2.5)))) abort (); if (a != (_Complex double) ((_Complex double) ((1.25)) / ((2.5)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((1.25)); if ((a /= ((2.5))) != (_Complex long double) ((_Complex long double) ((1.25)) / ((2.5)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((1.25)) / ((2.5)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (_Bool) ((_Bool) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (_Bool) ((_Bool) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (char) ((char) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (char) ((char) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (signed char) ((signed char) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (signed char) ((signed char) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (unsigned char) ((unsigned char) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (unsigned char) ((unsigned char) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (signed short) ((signed short) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (signed short) ((signed short) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (unsigned short) ((unsigned short) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (unsigned short) ((unsigned short) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (signed int) ((signed int) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (signed int) ((signed int) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (unsigned int) ((unsigned int) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (unsigned int) ((unsigned int) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (signed long) ((signed long) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (signed long) ((signed long) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (unsigned long) ((unsigned long) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (unsigned long) ((unsigned long) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (signed long long) ((signed long long) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (signed long long) ((signed long long) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (float) ((float) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (float) ((float) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (double) ((double) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (double) ((double) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (long double) ((long double) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (long double) ((long double) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (_Complex float) ((_Complex float) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (_Complex float) ((_Complex float) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (_Complex double) ((_Complex double) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (_Complex double) ((_Complex double) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((__builtin_complex ((1.0), (1.0)))); if ((a /= ((__builtin_complex ((0.5), (0.5))))) != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); if (a != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.0), (1.0)))) / ((__builtin_complex ((0.5), (0.5)))))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (_Bool) ((_Bool) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (_Bool) ((_Bool) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (char) ((char) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (char) ((char) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (signed char) ((signed char) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (signed char) ((signed char) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (unsigned char) ((unsigned char) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (unsigned char) ((unsigned char) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (signed short) ((signed short) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (signed short) ((signed short) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (unsigned short) ((unsigned short) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (unsigned short) ((unsigned short) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (signed int) ((signed int) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (signed int) ((signed int) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (unsigned int) ((unsigned int) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (unsigned int) ((unsigned int) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (signed long) ((signed long) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (signed long) ((signed long) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (unsigned long) ((unsigned long) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (unsigned long) ((unsigned long) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (signed long long) ((signed long long) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (signed long long) ((signed long long) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (float) ((float) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (float) ((float) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (double) ((double) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (double) ((double) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (long double) ((long double) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (long double) ((long double) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (_Complex float) ((_Complex float) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (_Complex float) ((_Complex float) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (_Complex double) ((_Complex double) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (_Complex double) ((_Complex double) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((__builtin_complex ((1.5), (2.5)))); if ((a /= ((2))) != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.5), (2.5)))) / ((2)))) abort (); } while (0); } while (0);
}

static void
test_mod (void)
{
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((1)); if ((a %= ((2))) != (_Bool) ((_Bool) ((1)) % ((2)))) abort (); if (a != (_Bool) ((_Bool) ((1)) % ((2)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((1)); if ((a %= ((2))) != (char) ((char) ((1)) % ((2)))) abort (); if (a != (char) ((char) ((1)) % ((2)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((1)); if ((a %= ((2))) != (signed char) ((signed char) ((1)) % ((2)))) abort (); if (a != (signed char) ((signed char) ((1)) % ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((1)); if ((a %= ((2))) != (unsigned char) ((unsigned char) ((1)) % ((2)))) abort (); if (a != (unsigned char) ((unsigned char) ((1)) % ((2)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((1)); if ((a %= ((2))) != (signed short) ((signed short) ((1)) % ((2)))) abort (); if (a != (signed short) ((signed short) ((1)) % ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((1)); if ((a %= ((2))) != (unsigned short) ((unsigned short) ((1)) % ((2)))) abort (); if (a != (unsigned short) ((unsigned short) ((1)) % ((2)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((1)); if ((a %= ((2))) != (signed int) ((signed int) ((1)) % ((2)))) abort (); if (a != (signed int) ((signed int) ((1)) % ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((1)); if ((a %= ((2))) != (unsigned int) ((unsigned int) ((1)) % ((2)))) abort (); if (a != (unsigned int) ((unsigned int) ((1)) % ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((1)); if ((a %= ((2))) != (signed long) ((signed long) ((1)) % ((2)))) abort (); if (a != (signed long) ((signed long) ((1)) % ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((1)); if ((a %= ((2))) != (unsigned long) ((unsigned long) ((1)) % ((2)))) abort (); if (a != (unsigned long) ((unsigned long) ((1)) % ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((1)); if ((a %= ((2))) != (signed long long) ((signed long long) ((1)) % ((2)))) abort (); if (a != (signed long long) ((signed long long) ((1)) % ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((1)); if ((a %= ((2))) != (unsigned long long) ((unsigned long long) ((1)) % ((2)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((1)) % ((2)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-3)); if ((a %= ((5))) != (_Bool) ((_Bool) ((-3)) % ((5)))) abort (); if (a != (_Bool) ((_Bool) ((-3)) % ((5)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-3)); if ((a %= ((5))) != (char) ((char) ((-3)) % ((5)))) abort (); if (a != (char) ((char) ((-3)) % ((5)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-3)); if ((a %= ((5))) != (signed char) ((signed char) ((-3)) % ((5)))) abort (); if (a != (signed char) ((signed char) ((-3)) % ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-3)); if ((a %= ((5))) != (unsigned char) ((unsigned char) ((-3)) % ((5)))) abort (); if (a != (unsigned char) ((unsigned char) ((-3)) % ((5)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-3)); if ((a %= ((5))) != (signed short) ((signed short) ((-3)) % ((5)))) abort (); if (a != (signed short) ((signed short) ((-3)) % ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-3)); if ((a %= ((5))) != (unsigned short) ((unsigned short) ((-3)) % ((5)))) abort (); if (a != (unsigned short) ((unsigned short) ((-3)) % ((5)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-3)); if ((a %= ((5))) != (signed int) ((signed int) ((-3)) % ((5)))) abort (); if (a != (signed int) ((signed int) ((-3)) % ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-3)); if ((a %= ((5))) != (unsigned int) ((unsigned int) ((-3)) % ((5)))) abort (); if (a != (unsigned int) ((unsigned int) ((-3)) % ((5)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-3)); if ((a %= ((5))) != (signed long) ((signed long) ((-3)) % ((5)))) abort (); if (a != (signed long) ((signed long) ((-3)) % ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-3)); if ((a %= ((5))) != (unsigned long) ((unsigned long) ((-3)) % ((5)))) abort (); if (a != (unsigned long) ((unsigned long) ((-3)) % ((5)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-3)); if ((a %= ((5))) != (signed long long) ((signed long long) ((-3)) % ((5)))) abort (); if (a != (signed long long) ((signed long long) ((-3)) % ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-3)); if ((a %= ((5))) != (unsigned long long) ((unsigned long long) ((-3)) % ((5)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-3)) % ((5)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-7)); if ((a %= ((-2))) != (_Bool) ((_Bool) ((-7)) % ((-2)))) abort (); if (a != (_Bool) ((_Bool) ((-7)) % ((-2)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-7)); if ((a %= ((-2))) != (char) ((char) ((-7)) % ((-2)))) abort (); if (a != (char) ((char) ((-7)) % ((-2)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-7)); if ((a %= ((-2))) != (signed char) ((signed char) ((-7)) % ((-2)))) abort (); if (a != (signed char) ((signed char) ((-7)) % ((-2)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-7)); if ((a %= ((-2))) != (unsigned char) ((unsigned char) ((-7)) % ((-2)))) abort (); if (a != (unsigned char) ((unsigned char) ((-7)) % ((-2)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-7)); if ((a %= ((-2))) != (signed short) ((signed short) ((-7)) % ((-2)))) abort (); if (a != (signed short) ((signed short) ((-7)) % ((-2)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-7)); if ((a %= ((-2))) != (unsigned short) ((unsigned short) ((-7)) % ((-2)))) abort (); if (a != (unsigned short) ((unsigned short) ((-7)) % ((-2)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-7)); if ((a %= ((-2))) != (signed int) ((signed int) ((-7)) % ((-2)))) abort (); if (a != (signed int) ((signed int) ((-7)) % ((-2)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-7)); if ((a %= ((-2))) != (unsigned int) ((unsigned int) ((-7)) % ((-2)))) abort (); if (a != (unsigned int) ((unsigned int) ((-7)) % ((-2)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-7)); if ((a %= ((-2))) != (signed long) ((signed long) ((-7)) % ((-2)))) abort (); if (a != (signed long) ((signed long) ((-7)) % ((-2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-7)); if ((a %= ((-2))) != (unsigned long) ((unsigned long) ((-7)) % ((-2)))) abort (); if (a != (unsigned long) ((unsigned long) ((-7)) % ((-2)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-7)); if ((a %= ((-2))) != (signed long long) ((signed long long) ((-7)) % ((-2)))) abort (); if (a != (signed long long) ((signed long long) ((-7)) % ((-2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-7)); if ((a %= ((-2))) != (unsigned long long) ((unsigned long long) ((-7)) % ((-2)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-7)) % ((-2)))) abort (); } while (0); } while (0);
}

static void
test_plus (void)
{
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((1)); if ((a += ((2))) != (_Bool) ((_Bool) ((1)) + ((2)))) abort (); if (a != (_Bool) ((_Bool) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((1)); if ((a += ((2))) != (char) ((char) ((1)) + ((2)))) abort (); if (a != (char) ((char) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((1)); if ((a += ((2))) != (signed char) ((signed char) ((1)) + ((2)))) abort (); if (a != (signed char) ((signed char) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((1)); if ((a += ((2))) != (unsigned char) ((unsigned char) ((1)) + ((2)))) abort (); if (a != (unsigned char) ((unsigned char) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((1)); if ((a += ((2))) != (signed short) ((signed short) ((1)) + ((2)))) abort (); if (a != (signed short) ((signed short) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((1)); if ((a += ((2))) != (unsigned short) ((unsigned short) ((1)) + ((2)))) abort (); if (a != (unsigned short) ((unsigned short) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((1)); if ((a += ((2))) != (signed int) ((signed int) ((1)) + ((2)))) abort (); if (a != (signed int) ((signed int) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((1)); if ((a += ((2))) != (unsigned int) ((unsigned int) ((1)) + ((2)))) abort (); if (a != (unsigned int) ((unsigned int) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((1)); if ((a += ((2))) != (signed long) ((signed long) ((1)) + ((2)))) abort (); if (a != (signed long) ((signed long) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((1)); if ((a += ((2))) != (unsigned long) ((unsigned long) ((1)) + ((2)))) abort (); if (a != (unsigned long) ((unsigned long) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((1)); if ((a += ((2))) != (signed long long) ((signed long long) ((1)) + ((2)))) abort (); if (a != (signed long long) ((signed long long) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((1)); if ((a += ((2))) != (unsigned long long) ((unsigned long long) ((1)) + ((2)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((1)); if ((a += ((2))) != (float) ((float) ((1)) + ((2)))) abort (); if (a != (float) ((float) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((1)); if ((a += ((2))) != (double) ((double) ((1)) + ((2)))) abort (); if (a != (double) ((double) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((1)); if ((a += ((2))) != (long double) ((long double) ((1)) + ((2)))) abort (); if (a != (long double) ((long double) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((1)); if ((a += ((2))) != (_Complex float) ((_Complex float) ((1)) + ((2)))) abort (); if (a != (_Complex float) ((_Complex float) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((1)); if ((a += ((2))) != (_Complex double) ((_Complex double) ((1)) + ((2)))) abort (); if (a != (_Complex double) ((_Complex double) ((1)) + ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((1)); if ((a += ((2))) != (_Complex long double) ((_Complex long double) ((1)) + ((2)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((1)) + ((2)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-3)); if ((a += ((5))) != (_Bool) ((_Bool) ((-3)) + ((5)))) abort (); if (a != (_Bool) ((_Bool) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-3)); if ((a += ((5))) != (char) ((char) ((-3)) + ((5)))) abort (); if (a != (char) ((char) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-3)); if ((a += ((5))) != (signed char) ((signed char) ((-3)) + ((5)))) abort (); if (a != (signed char) ((signed char) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-3)); if ((a += ((5))) != (unsigned char) ((unsigned char) ((-3)) + ((5)))) abort (); if (a != (unsigned char) ((unsigned char) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-3)); if ((a += ((5))) != (signed short) ((signed short) ((-3)) + ((5)))) abort (); if (a != (signed short) ((signed short) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-3)); if ((a += ((5))) != (unsigned short) ((unsigned short) ((-3)) + ((5)))) abort (); if (a != (unsigned short) ((unsigned short) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-3)); if ((a += ((5))) != (signed int) ((signed int) ((-3)) + ((5)))) abort (); if (a != (signed int) ((signed int) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-3)); if ((a += ((5))) != (unsigned int) ((unsigned int) ((-3)) + ((5)))) abort (); if (a != (unsigned int) ((unsigned int) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-3)); if ((a += ((5))) != (signed long) ((signed long) ((-3)) + ((5)))) abort (); if (a != (signed long) ((signed long) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-3)); if ((a += ((5))) != (unsigned long) ((unsigned long) ((-3)) + ((5)))) abort (); if (a != (unsigned long) ((unsigned long) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-3)); if ((a += ((5))) != (signed long long) ((signed long long) ((-3)) + ((5)))) abort (); if (a != (signed long long) ((signed long long) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-3)); if ((a += ((5))) != (unsigned long long) ((unsigned long long) ((-3)) + ((5)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((-3)); if ((a += ((5))) != (float) ((float) ((-3)) + ((5)))) abort (); if (a != (float) ((float) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((-3)); if ((a += ((5))) != (double) ((double) ((-3)) + ((5)))) abort (); if (a != (double) ((double) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((-3)); if ((a += ((5))) != (long double) ((long double) ((-3)) + ((5)))) abort (); if (a != (long double) ((long double) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((-3)); if ((a += ((5))) != (_Complex float) ((_Complex float) ((-3)) + ((5)))) abort (); if (a != (_Complex float) ((_Complex float) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((-3)); if ((a += ((5))) != (_Complex double) ((_Complex double) ((-3)) + ((5)))) abort (); if (a != (_Complex double) ((_Complex double) ((-3)) + ((5)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((-3)); if ((a += ((5))) != (_Complex long double) ((_Complex long double) ((-3)) + ((5)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((-3)) + ((5)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-7)); if ((a += ((-20))) != (_Bool) ((_Bool) ((-7)) + ((-20)))) abort (); if (a != (_Bool) ((_Bool) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-7)); if ((a += ((-20))) != (char) ((char) ((-7)) + ((-20)))) abort (); if (a != (char) ((char) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-7)); if ((a += ((-20))) != (signed char) ((signed char) ((-7)) + ((-20)))) abort (); if (a != (signed char) ((signed char) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-7)); if ((a += ((-20))) != (unsigned char) ((unsigned char) ((-7)) + ((-20)))) abort (); if (a != (unsigned char) ((unsigned char) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-7)); if ((a += ((-20))) != (signed short) ((signed short) ((-7)) + ((-20)))) abort (); if (a != (signed short) ((signed short) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-7)); if ((a += ((-20))) != (unsigned short) ((unsigned short) ((-7)) + ((-20)))) abort (); if (a != (unsigned short) ((unsigned short) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-7)); if ((a += ((-20))) != (signed int) ((signed int) ((-7)) + ((-20)))) abort (); if (a != (signed int) ((signed int) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-7)); if ((a += ((-20))) != (unsigned int) ((unsigned int) ((-7)) + ((-20)))) abort (); if (a != (unsigned int) ((unsigned int) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-7)); if ((a += ((-20))) != (signed long) ((signed long) ((-7)) + ((-20)))) abort (); if (a != (signed long) ((signed long) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-7)); if ((a += ((-20))) != (unsigned long) ((unsigned long) ((-7)) + ((-20)))) abort (); if (a != (unsigned long) ((unsigned long) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-7)); if ((a += ((-20))) != (signed long long) ((signed long long) ((-7)) + ((-20)))) abort (); if (a != (signed long long) ((signed long long) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-7)); if ((a += ((-20))) != (unsigned long long) ((unsigned long long) ((-7)) + ((-20)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((-7)); if ((a += ((-20))) != (float) ((float) ((-7)) + ((-20)))) abort (); if (a != (float) ((float) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((-7)); if ((a += ((-20))) != (double) ((double) ((-7)) + ((-20)))) abort (); if (a != (double) ((double) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((-7)); if ((a += ((-20))) != (long double) ((long double) ((-7)) + ((-20)))) abort (); if (a != (long double) ((long double) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((-7)); if ((a += ((-20))) != (_Complex float) ((_Complex float) ((-7)) + ((-20)))) abort (); if (a != (_Complex float) ((_Complex float) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((-7)); if ((a += ((-20))) != (_Complex double) ((_Complex double) ((-7)) + ((-20)))) abort (); if (a != (_Complex double) ((_Complex double) ((-7)) + ((-20)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((-7)); if ((a += ((-20))) != (_Complex long double) ((_Complex long double) ((-7)) + ((-20)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((-7)) + ((-20)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((1.25)); if ((a += ((3.5))) != (_Bool) ((_Bool) ((1.25)) + ((3.5)))) abort (); if (a != (_Bool) ((_Bool) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((1.25)); if ((a += ((3.5))) != (char) ((char) ((1.25)) + ((3.5)))) abort (); if (a != (char) ((char) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((1.25)); if ((a += ((3.5))) != (signed char) ((signed char) ((1.25)) + ((3.5)))) abort (); if (a != (signed char) ((signed char) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((1.25)); if ((a += ((3.5))) != (unsigned char) ((unsigned char) ((1.25)) + ((3.5)))) abort (); if (a != (unsigned char) ((unsigned char) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((1.25)); if ((a += ((3.5))) != (signed short) ((signed short) ((1.25)) + ((3.5)))) abort (); if (a != (signed short) ((signed short) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((1.25)); if ((a += ((3.5))) != (unsigned short) ((unsigned short) ((1.25)) + ((3.5)))) abort (); if (a != (unsigned short) ((unsigned short) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((1.25)); if ((a += ((3.5))) != (signed int) ((signed int) ((1.25)) + ((3.5)))) abort (); if (a != (signed int) ((signed int) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((1.25)); if ((a += ((3.5))) != (unsigned int) ((unsigned int) ((1.25)) + ((3.5)))) abort (); if (a != (unsigned int) ((unsigned int) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((1.25)); if ((a += ((3.5))) != (signed long) ((signed long) ((1.25)) + ((3.5)))) abort (); if (a != (signed long) ((signed long) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((1.25)); if ((a += ((3.5))) != (unsigned long) ((unsigned long) ((1.25)) + ((3.5)))) abort (); if (a != (unsigned long) ((unsigned long) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((1.25)); if ((a += ((3.5))) != (signed long long) ((signed long long) ((1.25)) + ((3.5)))) abort (); if (a != (signed long long) ((signed long long) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((1.25)); if ((a += ((3.5))) != (unsigned long long) ((unsigned long long) ((1.25)) + ((3.5)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((1.25)); if ((a += ((3.5))) != (float) ((float) ((1.25)) + ((3.5)))) abort (); if (a != (float) ((float) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((1.25)); if ((a += ((3.5))) != (double) ((double) ((1.25)) + ((3.5)))) abort (); if (a != (double) ((double) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((1.25)); if ((a += ((3.5))) != (long double) ((long double) ((1.25)) + ((3.5)))) abort (); if (a != (long double) ((long double) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((1.25)); if ((a += ((3.5))) != (_Complex float) ((_Complex float) ((1.25)) + ((3.5)))) abort (); if (a != (_Complex float) ((_Complex float) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((1.25)); if ((a += ((3.5))) != (_Complex double) ((_Complex double) ((1.25)) + ((3.5)))) abort (); if (a != (_Complex double) ((_Complex double) ((1.25)) + ((3.5)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((1.25)); if ((a += ((3.5))) != (_Complex long double) ((_Complex long double) ((1.25)) + ((3.5)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((1.25)) + ((3.5)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (_Bool) ((_Bool) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (_Bool) ((_Bool) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (char) ((char) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (char) ((char) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (signed char) ((signed char) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (signed char) ((signed char) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (unsigned char) ((unsigned char) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (unsigned char) ((unsigned char) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (signed short) ((signed short) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (signed short) ((signed short) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (unsigned short) ((unsigned short) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (unsigned short) ((unsigned short) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (signed int) ((signed int) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (signed int) ((signed int) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (unsigned int) ((unsigned int) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (unsigned int) ((unsigned int) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (signed long) ((signed long) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (signed long) ((signed long) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (unsigned long) ((unsigned long) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (unsigned long) ((unsigned long) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (signed long long) ((signed long long) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (signed long long) ((signed long long) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (float) ((float) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (float) ((float) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (double) ((double) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (double) ((double) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (long double) ((long double) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (long double) ((long double) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (_Complex float) ((_Complex float) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (_Complex float) ((_Complex float) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (_Complex double) ((_Complex double) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (_Complex double) ((_Complex double) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((__builtin_complex ((3.5), (4.5))))) != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); if (a != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.5), (2.5)))) + ((__builtin_complex ((3.5), (4.5)))))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (_Bool) ((_Bool) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (_Bool) ((_Bool) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (char) ((char) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (char) ((char) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (signed char) ((signed char) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (signed char) ((signed char) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (unsigned char) ((unsigned char) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (unsigned char) ((unsigned char) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (signed short) ((signed short) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (signed short) ((signed short) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (unsigned short) ((unsigned short) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (unsigned short) ((unsigned short) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (signed int) ((signed int) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (signed int) ((signed int) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (unsigned int) ((unsigned int) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (unsigned int) ((unsigned int) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (signed long) ((signed long) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (signed long) ((signed long) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (unsigned long) ((unsigned long) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (unsigned long) ((unsigned long) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (signed long long) ((signed long long) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (signed long long) ((signed long long) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (float) ((float) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (float) ((float) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (double) ((double) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (double) ((double) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (long double) ((long double) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (long double) ((long double) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (_Complex float) ((_Complex float) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (_Complex float) ((_Complex float) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (_Complex double) ((_Complex double) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (_Complex double) ((_Complex double) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((__builtin_complex ((1.5), (2.5)))); if ((a += ((2))) != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((__builtin_complex ((1.5), (2.5)))) + ((2)))) abort (); } while (0); } while (0);
  static int ia[2];
  do { static volatile _Atomic (int *) a = (int *) (&ia[1]); if ((a += (1)) != (int *) ((int *) (&ia[1]) + (1))) abort (); if (a != (int *) ((int *) (&ia[1]) + (1))) abort (); } while (0);
  do { static volatile _Atomic (int *) a = (int *) (&ia[1]); if ((a += (-1)) != (int *) ((int *) (&ia[1]) + (-1))) abort (); if (a != (int *) ((int *) (&ia[1]) + (-1))) abort (); } while (0);
}

static void
test_minus (void)
{
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((1)); if ((a -= ((2))) != (_Bool) ((_Bool) ((1)) - ((2)))) abort (); if (a != (_Bool) ((_Bool) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((1)); if ((a -= ((2))) != (char) ((char) ((1)) - ((2)))) abort (); if (a != (char) ((char) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((1)); if ((a -= ((2))) != (signed char) ((signed char) ((1)) - ((2)))) abort (); if (a != (signed char) ((signed char) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((1)); if ((a -= ((2))) != (unsigned char) ((unsigned char) ((1)) - ((2)))) abort (); if (a != (unsigned char) ((unsigned char) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((1)); if ((a -= ((2))) != (signed short) ((signed short) ((1)) - ((2)))) abort (); if (a != (signed short) ((signed short) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((1)); if ((a -= ((2))) != (unsigned short) ((unsigned short) ((1)) - ((2)))) abort (); if (a != (unsigned short) ((unsigned short) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((1)); if ((a -= ((2))) != (signed int) ((signed int) ((1)) - ((2)))) abort (); if (a != (signed int) ((signed int) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((1)); if ((a -= ((2))) != (unsigned int) ((unsigned int) ((1)) - ((2)))) abort (); if (a != (unsigned int) ((unsigned int) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((1)); if ((a -= ((2))) != (signed long) ((signed long) ((1)) - ((2)))) abort (); if (a != (signed long) ((signed long) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((1)); if ((a -= ((2))) != (unsigned long) ((unsigned long) ((1)) - ((2)))) abort (); if (a != (unsigned long) ((unsigned long) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((1)); if ((a -= ((2))) != (signed long long) ((signed long long) ((1)) - ((2)))) abort (); if (a != (signed long long) ((signed long long) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((1)); if ((a -= ((2))) != (unsigned long long) ((unsigned long long) ((1)) - ((2)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((1)); if ((a -= ((2))) != (float) ((float) ((1)) - ((2)))) abort (); if (a != (float) ((float) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((1)); if ((a -= ((2))) != (double) ((double) ((1)) - ((2)))) abort (); if (a != (double) ((double) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((1)); if ((a -= ((2))) != (long double) ((long double) ((1)) - ((2)))) abort (); if (a != (long double) ((long double) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((1)); if ((a -= ((2))) != (_Complex float) ((_Complex float) ((1)) - ((2)))) abort (); if (a != (_Complex float) ((_Complex float) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((1)); if ((a -= ((2))) != (_Complex double) ((_Complex double) ((1)) - ((2)))) abort (); if (a != (_Complex double) ((_Complex double) ((1)) - ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((1)); if ((a -= ((2))) != (_Complex long double) ((_Complex long double) ((1)) - ((2)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((1)) - ((2)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-3)); if ((a -= ((5))) != (_Bool) ((_Bool) ((-3)) - ((5)))) abort (); if (a != (_Bool) ((_Bool) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-3)); if ((a -= ((5))) != (char) ((char) ((-3)) - ((5)))) abort (); if (a != (char) ((char) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-3)); if ((a -= ((5))) != (signed char) ((signed char) ((-3)) - ((5)))) abort (); if (a != (signed char) ((signed char) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-3)); if ((a -= ((5))) != (unsigned char) ((unsigned char) ((-3)) - ((5)))) abort (); if (a != (unsigned char) ((unsigned char) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-3)); if ((a -= ((5))) != (signed short) ((signed short) ((-3)) - ((5)))) abort (); if (a != (signed short) ((signed short) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-3)); if ((a -= ((5))) != (unsigned short) ((unsigned short) ((-3)) - ((5)))) abort (); if (a != (unsigned short) ((unsigned short) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-3)); if ((a -= ((5))) != (signed int) ((signed int) ((-3)) - ((5)))) abort (); if (a != (signed int) ((signed int) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-3)); if ((a -= ((5))) != (unsigned int) ((unsigned int) ((-3)) - ((5)))) abort (); if (a != (unsigned int) ((unsigned int) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-3)); if ((a -= ((5))) != (signed long) ((signed long) ((-3)) - ((5)))) abort (); if (a != (signed long) ((signed long) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-3)); if ((a -= ((5))) != (unsigned long) ((unsigned long) ((-3)) - ((5)))) abort (); if (a != (unsigned long) ((unsigned long) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-3)); if ((a -= ((5))) != (signed long long) ((signed long long) ((-3)) - ((5)))) abort (); if (a != (signed long long) ((signed long long) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-3)); if ((a -= ((5))) != (unsigned long long) ((unsigned long long) ((-3)) - ((5)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((-3)); if ((a -= ((5))) != (float) ((float) ((-3)) - ((5)))) abort (); if (a != (float) ((float) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((-3)); if ((a -= ((5))) != (double) ((double) ((-3)) - ((5)))) abort (); if (a != (double) ((double) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((-3)); if ((a -= ((5))) != (long double) ((long double) ((-3)) - ((5)))) abort (); if (a != (long double) ((long double) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((-3)); if ((a -= ((5))) != (_Complex float) ((_Complex float) ((-3)) - ((5)))) abort (); if (a != (_Complex float) ((_Complex float) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((-3)); if ((a -= ((5))) != (_Complex double) ((_Complex double) ((-3)) - ((5)))) abort (); if (a != (_Complex double) ((_Complex double) ((-3)) - ((5)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((-3)); if ((a -= ((5))) != (_Complex long double) ((_Complex long double) ((-3)) - ((5)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((-3)) - ((5)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-7)); if ((a -= ((-20))) != (_Bool) ((_Bool) ((-7)) - ((-20)))) abort (); if (a != (_Bool) ((_Bool) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-7)); if ((a -= ((-20))) != (char) ((char) ((-7)) - ((-20)))) abort (); if (a != (char) ((char) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-7)); if ((a -= ((-20))) != (signed char) ((signed char) ((-7)) - ((-20)))) abort (); if (a != (signed char) ((signed char) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-7)); if ((a -= ((-20))) != (unsigned char) ((unsigned char) ((-7)) - ((-20)))) abort (); if (a != (unsigned char) ((unsigned char) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-7)); if ((a -= ((-20))) != (signed short) ((signed short) ((-7)) - ((-20)))) abort (); if (a != (signed short) ((signed short) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-7)); if ((a -= ((-20))) != (unsigned short) ((unsigned short) ((-7)) - ((-20)))) abort (); if (a != (unsigned short) ((unsigned short) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-7)); if ((a -= ((-20))) != (signed int) ((signed int) ((-7)) - ((-20)))) abort (); if (a != (signed int) ((signed int) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-7)); if ((a -= ((-20))) != (unsigned int) ((unsigned int) ((-7)) - ((-20)))) abort (); if (a != (unsigned int) ((unsigned int) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-7)); if ((a -= ((-20))) != (signed long) ((signed long) ((-7)) - ((-20)))) abort (); if (a != (signed long) ((signed long) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-7)); if ((a -= ((-20))) != (unsigned long) ((unsigned long) ((-7)) - ((-20)))) abort (); if (a != (unsigned long) ((unsigned long) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-7)); if ((a -= ((-20))) != (signed long long) ((signed long long) ((-7)) - ((-20)))) abort (); if (a != (signed long long) ((signed long long) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-7)); if ((a -= ((-20))) != (unsigned long long) ((unsigned long long) ((-7)) - ((-20)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((-7)); if ((a -= ((-20))) != (float) ((float) ((-7)) - ((-20)))) abort (); if (a != (float) ((float) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((-7)); if ((a -= ((-20))) != (double) ((double) ((-7)) - ((-20)))) abort (); if (a != (double) ((double) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((-7)); if ((a -= ((-20))) != (long double) ((long double) ((-7)) - ((-20)))) abort (); if (a != (long double) ((long double) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((-7)); if ((a -= ((-20))) != (_Complex float) ((_Complex float) ((-7)) - ((-20)))) abort (); if (a != (_Complex float) ((_Complex float) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((-7)); if ((a -= ((-20))) != (_Complex double) ((_Complex double) ((-7)) - ((-20)))) abort (); if (a != (_Complex double) ((_Complex double) ((-7)) - ((-20)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((-7)); if ((a -= ((-20))) != (_Complex long double) ((_Complex long double) ((-7)) - ((-20)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((-7)) - ((-20)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((3.5)); if ((a -= ((1.25))) != (_Bool) ((_Bool) ((3.5)) - ((1.25)))) abort (); if (a != (_Bool) ((_Bool) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((3.5)); if ((a -= ((1.25))) != (char) ((char) ((3.5)) - ((1.25)))) abort (); if (a != (char) ((char) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((3.5)); if ((a -= ((1.25))) != (signed char) ((signed char) ((3.5)) - ((1.25)))) abort (); if (a != (signed char) ((signed char) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((3.5)); if ((a -= ((1.25))) != (unsigned char) ((unsigned char) ((3.5)) - ((1.25)))) abort (); if (a != (unsigned char) ((unsigned char) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((3.5)); if ((a -= ((1.25))) != (signed short) ((signed short) ((3.5)) - ((1.25)))) abort (); if (a != (signed short) ((signed short) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((3.5)); if ((a -= ((1.25))) != (unsigned short) ((unsigned short) ((3.5)) - ((1.25)))) abort (); if (a != (unsigned short) ((unsigned short) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((3.5)); if ((a -= ((1.25))) != (signed int) ((signed int) ((3.5)) - ((1.25)))) abort (); if (a != (signed int) ((signed int) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((3.5)); if ((a -= ((1.25))) != (unsigned int) ((unsigned int) ((3.5)) - ((1.25)))) abort (); if (a != (unsigned int) ((unsigned int) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((3.5)); if ((a -= ((1.25))) != (signed long) ((signed long) ((3.5)) - ((1.25)))) abort (); if (a != (signed long) ((signed long) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((3.5)); if ((a -= ((1.25))) != (unsigned long) ((unsigned long) ((3.5)) - ((1.25)))) abort (); if (a != (unsigned long) ((unsigned long) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((3.5)); if ((a -= ((1.25))) != (signed long long) ((signed long long) ((3.5)) - ((1.25)))) abort (); if (a != (signed long long) ((signed long long) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((3.5)); if ((a -= ((1.25))) != (unsigned long long) ((unsigned long long) ((3.5)) - ((1.25)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((3.5)); if ((a -= ((1.25))) != (float) ((float) ((3.5)) - ((1.25)))) abort (); if (a != (float) ((float) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((3.5)); if ((a -= ((1.25))) != (double) ((double) ((3.5)) - ((1.25)))) abort (); if (a != (double) ((double) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((3.5)); if ((a -= ((1.25))) != (long double) ((long double) ((3.5)) - ((1.25)))) abort (); if (a != (long double) ((long double) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((3.5)); if ((a -= ((1.25))) != (_Complex float) ((_Complex float) ((3.5)) - ((1.25)))) abort (); if (a != (_Complex float) ((_Complex float) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((3.5)); if ((a -= ((1.25))) != (_Complex double) ((_Complex double) ((3.5)) - ((1.25)))) abort (); if (a != (_Complex double) ((_Complex double) ((3.5)) - ((1.25)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((3.5)); if ((a -= ((1.25))) != (_Complex long double) ((_Complex long double) ((3.5)) - ((1.25)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((3.5)) - ((1.25)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (_Bool) ((_Bool) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (_Bool) ((_Bool) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (char) ((char) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (char) ((char) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (signed char) ((signed char) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (signed char) ((signed char) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (unsigned char) ((unsigned char) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (unsigned char) ((unsigned char) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (signed short) ((signed short) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (signed short) ((signed short) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (unsigned short) ((unsigned short) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (unsigned short) ((unsigned short) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (signed int) ((signed int) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (signed int) ((signed int) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (unsigned int) ((unsigned int) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (unsigned int) ((unsigned int) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (signed long) ((signed long) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (signed long) ((signed long) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (unsigned long) ((unsigned long) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (unsigned long) ((unsigned long) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (signed long long) ((signed long long) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (signed long long) ((signed long long) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (unsigned long long) ((unsigned long long) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (unsigned long long) ((unsigned long long) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (float) ((float) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (float) ((float) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (double) ((double) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (double) ((double) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (long double) ((long double) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (long double) ((long double) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (_Complex float) ((_Complex float) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (_Complex float) ((_Complex float) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (_Complex double) ((_Complex double) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (_Complex double) ((_Complex double) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((__builtin_complex ((3.5), (4.5)))); if ((a -= ((__builtin_complex ((1.5), (2.5))))) != (_Complex long double) ((_Complex long double) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); if (a != (_Complex long double) ((_Complex long double) ((__builtin_complex ((3.5), (4.5)))) - ((__builtin_complex ((1.5), (2.5)))))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (_Bool) ((_Bool) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (_Bool) ((_Bool) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (char) ((char) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (char) ((char) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (signed char) ((signed char) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (signed char) ((signed char) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (unsigned char) ((unsigned char) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (unsigned char) ((unsigned char) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (signed short) ((signed short) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (signed short) ((signed short) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (unsigned short) ((unsigned short) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (unsigned short) ((unsigned short) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (signed int) ((signed int) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (signed int) ((signed int) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (unsigned int) ((unsigned int) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (unsigned int) ((unsigned int) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (signed long) ((signed long) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (signed long) ((signed long) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (unsigned long) ((unsigned long) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (unsigned long) ((unsigned long) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (signed long long) ((signed long long) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (signed long long) ((signed long long) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (unsigned long long) ((unsigned long long) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (float) a = (float) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (float) ((float) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (float) ((float) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (double) a = (double) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (double) ((double) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (double) ((double) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (long double) a = (long double) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (long double) ((long double) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (long double) ((long double) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex float) a = (_Complex float) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (_Complex float) ((_Complex float) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (_Complex float) ((_Complex float) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex double) a = (_Complex double) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (_Complex double) ((_Complex double) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (_Complex double) ((_Complex double) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); do { static volatile _Atomic (_Complex long double) a = (_Complex long double) ((__builtin_complex ((3.5), (2.5)))); if ((a -= ((2))) != (_Complex long double) ((_Complex long double) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); if (a != (_Complex long double) ((_Complex long double) ((__builtin_complex ((3.5), (2.5)))) - ((2)))) abort (); } while (0); } while (0);
  static int ia[2];
  do { static volatile _Atomic (int *) a = (int *) (&ia[1]); if ((a -= (1)) != (int *) ((int *) (&ia[1]) - (1))) abort (); if (a != (int *) ((int *) (&ia[1]) - (1))) abort (); } while (0);
  do { static volatile _Atomic (int *) a = (int *) (&ia[1]); if ((a -= (-1)) != (int *) ((int *) (&ia[1]) - (-1))) abort (); if (a != (int *) ((int *) (&ia[1]) - (-1))) abort (); } while (0);
}

static void
test_lshift (void)
{
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((1)); if ((a <<= ((7))) != (_Bool) ((_Bool) ((1)) << ((7)))) abort (); if (a != (_Bool) ((_Bool) ((1)) << ((7)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((1)); if ((a <<= ((7))) != (char) ((char) ((1)) << ((7)))) abort (); if (a != (char) ((char) ((1)) << ((7)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((1)); if ((a <<= ((7))) != (signed char) ((signed char) ((1)) << ((7)))) abort (); if (a != (signed char) ((signed char) ((1)) << ((7)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((1)); if ((a <<= ((7))) != (unsigned char) ((unsigned char) ((1)) << ((7)))) abort (); if (a != (unsigned char) ((unsigned char) ((1)) << ((7)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((1)); if ((a <<= ((7))) != (signed short) ((signed short) ((1)) << ((7)))) abort (); if (a != (signed short) ((signed short) ((1)) << ((7)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((1)); if ((a <<= ((7))) != (unsigned short) ((unsigned short) ((1)) << ((7)))) abort (); if (a != (unsigned short) ((unsigned short) ((1)) << ((7)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((1)); if ((a <<= ((7))) != (signed int) ((signed int) ((1)) << ((7)))) abort (); if (a != (signed int) ((signed int) ((1)) << ((7)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((1)); if ((a <<= ((7))) != (unsigned int) ((unsigned int) ((1)) << ((7)))) abort (); if (a != (unsigned int) ((unsigned int) ((1)) << ((7)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((1)); if ((a <<= ((7))) != (signed long) ((signed long) ((1)) << ((7)))) abort (); if (a != (signed long) ((signed long) ((1)) << ((7)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((1)); if ((a <<= ((7))) != (unsigned long) ((unsigned long) ((1)) << ((7)))) abort (); if (a != (unsigned long) ((unsigned long) ((1)) << ((7)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((1)); if ((a <<= ((7))) != (signed long long) ((signed long long) ((1)) << ((7)))) abort (); if (a != (signed long long) ((signed long long) ((1)) << ((7)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((1)); if ((a <<= ((7))) != (unsigned long long) ((unsigned long long) ((1)) << ((7)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((1)) << ((7)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((15)); if ((a <<= ((3))) != (_Bool) ((_Bool) ((15)) << ((3)))) abort (); if (a != (_Bool) ((_Bool) ((15)) << ((3)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((15)); if ((a <<= ((3))) != (char) ((char) ((15)) << ((3)))) abort (); if (a != (char) ((char) ((15)) << ((3)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((15)); if ((a <<= ((3))) != (signed char) ((signed char) ((15)) << ((3)))) abort (); if (a != (signed char) ((signed char) ((15)) << ((3)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((15)); if ((a <<= ((3))) != (unsigned char) ((unsigned char) ((15)) << ((3)))) abort (); if (a != (unsigned char) ((unsigned char) ((15)) << ((3)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((15)); if ((a <<= ((3))) != (signed short) ((signed short) ((15)) << ((3)))) abort (); if (a != (signed short) ((signed short) ((15)) << ((3)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((15)); if ((a <<= ((3))) != (unsigned short) ((unsigned short) ((15)) << ((3)))) abort (); if (a != (unsigned short) ((unsigned short) ((15)) << ((3)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((15)); if ((a <<= ((3))) != (signed int) ((signed int) ((15)) << ((3)))) abort (); if (a != (signed int) ((signed int) ((15)) << ((3)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((15)); if ((a <<= ((3))) != (unsigned int) ((unsigned int) ((15)) << ((3)))) abort (); if (a != (unsigned int) ((unsigned int) ((15)) << ((3)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((15)); if ((a <<= ((3))) != (signed long) ((signed long) ((15)) << ((3)))) abort (); if (a != (signed long) ((signed long) ((15)) << ((3)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((15)); if ((a <<= ((3))) != (unsigned long) ((unsigned long) ((15)) << ((3)))) abort (); if (a != (unsigned long) ((unsigned long) ((15)) << ((3)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((15)); if ((a <<= ((3))) != (signed long long) ((signed long long) ((15)) << ((3)))) abort (); if (a != (signed long long) ((signed long long) ((15)) << ((3)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((15)); if ((a <<= ((3))) != (unsigned long long) ((unsigned long long) ((15)) << ((3)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((15)) << ((3)))) abort (); } while (0); } while (0);
}

static void
test_rshift (void)
{
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((1)); if ((a >>= ((1))) != (_Bool) ((_Bool) ((1)) >> ((1)))) abort (); if (a != (_Bool) ((_Bool) ((1)) >> ((1)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((1)); if ((a >>= ((1))) != (char) ((char) ((1)) >> ((1)))) abort (); if (a != (char) ((char) ((1)) >> ((1)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((1)); if ((a >>= ((1))) != (signed char) ((signed char) ((1)) >> ((1)))) abort (); if (a != (signed char) ((signed char) ((1)) >> ((1)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((1)); if ((a >>= ((1))) != (unsigned char) ((unsigned char) ((1)) >> ((1)))) abort (); if (a != (unsigned char) ((unsigned char) ((1)) >> ((1)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((1)); if ((a >>= ((1))) != (signed short) ((signed short) ((1)) >> ((1)))) abort (); if (a != (signed short) ((signed short) ((1)) >> ((1)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((1)); if ((a >>= ((1))) != (unsigned short) ((unsigned short) ((1)) >> ((1)))) abort (); if (a != (unsigned short) ((unsigned short) ((1)) >> ((1)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((1)); if ((a >>= ((1))) != (signed int) ((signed int) ((1)) >> ((1)))) abort (); if (a != (signed int) ((signed int) ((1)) >> ((1)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((1)); if ((a >>= ((1))) != (unsigned int) ((unsigned int) ((1)) >> ((1)))) abort (); if (a != (unsigned int) ((unsigned int) ((1)) >> ((1)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((1)); if ((a >>= ((1))) != (signed long) ((signed long) ((1)) >> ((1)))) abort (); if (a != (signed long) ((signed long) ((1)) >> ((1)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((1)); if ((a >>= ((1))) != (unsigned long) ((unsigned long) ((1)) >> ((1)))) abort (); if (a != (unsigned long) ((unsigned long) ((1)) >> ((1)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((1)); if ((a >>= ((1))) != (signed long long) ((signed long long) ((1)) >> ((1)))) abort (); if (a != (signed long long) ((signed long long) ((1)) >> ((1)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((1)); if ((a >>= ((1))) != (unsigned long long) ((unsigned long long) ((1)) >> ((1)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((1)) >> ((1)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((127)); if ((a >>= ((4))) != (_Bool) ((_Bool) ((127)) >> ((4)))) abort (); if (a != (_Bool) ((_Bool) ((127)) >> ((4)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((127)); if ((a >>= ((4))) != (char) ((char) ((127)) >> ((4)))) abort (); if (a != (char) ((char) ((127)) >> ((4)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((127)); if ((a >>= ((4))) != (signed char) ((signed char) ((127)) >> ((4)))) abort (); if (a != (signed char) ((signed char) ((127)) >> ((4)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((127)); if ((a >>= ((4))) != (unsigned char) ((unsigned char) ((127)) >> ((4)))) abort (); if (a != (unsigned char) ((unsigned char) ((127)) >> ((4)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((127)); if ((a >>= ((4))) != (signed short) ((signed short) ((127)) >> ((4)))) abort (); if (a != (signed short) ((signed short) ((127)) >> ((4)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((127)); if ((a >>= ((4))) != (unsigned short) ((unsigned short) ((127)) >> ((4)))) abort (); if (a != (unsigned short) ((unsigned short) ((127)) >> ((4)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((127)); if ((a >>= ((4))) != (signed int) ((signed int) ((127)) >> ((4)))) abort (); if (a != (signed int) ((signed int) ((127)) >> ((4)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((127)); if ((a >>= ((4))) != (unsigned int) ((unsigned int) ((127)) >> ((4)))) abort (); if (a != (unsigned int) ((unsigned int) ((127)) >> ((4)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((127)); if ((a >>= ((4))) != (signed long) ((signed long) ((127)) >> ((4)))) abort (); if (a != (signed long) ((signed long) ((127)) >> ((4)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((127)); if ((a >>= ((4))) != (unsigned long) ((unsigned long) ((127)) >> ((4)))) abort (); if (a != (unsigned long) ((unsigned long) ((127)) >> ((4)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((127)); if ((a >>= ((4))) != (signed long long) ((signed long long) ((127)) >> ((4)))) abort (); if (a != (signed long long) ((signed long long) ((127)) >> ((4)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((127)); if ((a >>= ((4))) != (unsigned long long) ((unsigned long long) ((127)) >> ((4)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((127)) >> ((4)))) abort (); } while (0); } while (0);
}

static void
test_and (void)
{
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((0x1234)); if ((a &= ((0x7856))) != (_Bool) ((_Bool) ((0x1234)) & ((0x7856)))) abort (); if (a != (_Bool) ((_Bool) ((0x1234)) & ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((0x1234)); if ((a &= ((0x7856))) != (char) ((char) ((0x1234)) & ((0x7856)))) abort (); if (a != (char) ((char) ((0x1234)) & ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((0x1234)); if ((a &= ((0x7856))) != (signed char) ((signed char) ((0x1234)) & ((0x7856)))) abort (); if (a != (signed char) ((signed char) ((0x1234)) & ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((0x1234)); if ((a &= ((0x7856))) != (unsigned char) ((unsigned char) ((0x1234)) & ((0x7856)))) abort (); if (a != (unsigned char) ((unsigned char) ((0x1234)) & ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((0x1234)); if ((a &= ((0x7856))) != (signed short) ((signed short) ((0x1234)) & ((0x7856)))) abort (); if (a != (signed short) ((signed short) ((0x1234)) & ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((0x1234)); if ((a &= ((0x7856))) != (unsigned short) ((unsigned short) ((0x1234)) & ((0x7856)))) abort (); if (a != (unsigned short) ((unsigned short) ((0x1234)) & ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((0x1234)); if ((a &= ((0x7856))) != (signed int) ((signed int) ((0x1234)) & ((0x7856)))) abort (); if (a != (signed int) ((signed int) ((0x1234)) & ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((0x1234)); if ((a &= ((0x7856))) != (unsigned int) ((unsigned int) ((0x1234)) & ((0x7856)))) abort (); if (a != (unsigned int) ((unsigned int) ((0x1234)) & ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((0x1234)); if ((a &= ((0x7856))) != (signed long) ((signed long) ((0x1234)) & ((0x7856)))) abort (); if (a != (signed long) ((signed long) ((0x1234)) & ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((0x1234)); if ((a &= ((0x7856))) != (unsigned long) ((unsigned long) ((0x1234)) & ((0x7856)))) abort (); if (a != (unsigned long) ((unsigned long) ((0x1234)) & ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((0x1234)); if ((a &= ((0x7856))) != (signed long long) ((signed long long) ((0x1234)) & ((0x7856)))) abort (); if (a != (signed long long) ((signed long long) ((0x1234)) & ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((0x1234)); if ((a &= ((0x7856))) != (unsigned long long) ((unsigned long long) ((0x1234)) & ((0x7856)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((0x1234)) & ((0x7856)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-1)); if ((a &= ((0x12345678))) != (_Bool) ((_Bool) ((-1)) & ((0x12345678)))) abort (); if (a != (_Bool) ((_Bool) ((-1)) & ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-1)); if ((a &= ((0x12345678))) != (char) ((char) ((-1)) & ((0x12345678)))) abort (); if (a != (char) ((char) ((-1)) & ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-1)); if ((a &= ((0x12345678))) != (signed char) ((signed char) ((-1)) & ((0x12345678)))) abort (); if (a != (signed char) ((signed char) ((-1)) & ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-1)); if ((a &= ((0x12345678))) != (unsigned char) ((unsigned char) ((-1)) & ((0x12345678)))) abort (); if (a != (unsigned char) ((unsigned char) ((-1)) & ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-1)); if ((a &= ((0x12345678))) != (signed short) ((signed short) ((-1)) & ((0x12345678)))) abort (); if (a != (signed short) ((signed short) ((-1)) & ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-1)); if ((a &= ((0x12345678))) != (unsigned short) ((unsigned short) ((-1)) & ((0x12345678)))) abort (); if (a != (unsigned short) ((unsigned short) ((-1)) & ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-1)); if ((a &= ((0x12345678))) != (signed int) ((signed int) ((-1)) & ((0x12345678)))) abort (); if (a != (signed int) ((signed int) ((-1)) & ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-1)); if ((a &= ((0x12345678))) != (unsigned int) ((unsigned int) ((-1)) & ((0x12345678)))) abort (); if (a != (unsigned int) ((unsigned int) ((-1)) & ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-1)); if ((a &= ((0x12345678))) != (signed long) ((signed long) ((-1)) & ((0x12345678)))) abort (); if (a != (signed long) ((signed long) ((-1)) & ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-1)); if ((a &= ((0x12345678))) != (unsigned long) ((unsigned long) ((-1)) & ((0x12345678)))) abort (); if (a != (unsigned long) ((unsigned long) ((-1)) & ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-1)); if ((a &= ((0x12345678))) != (signed long long) ((signed long long) ((-1)) & ((0x12345678)))) abort (); if (a != (signed long long) ((signed long long) ((-1)) & ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-1)); if ((a &= ((0x12345678))) != (unsigned long long) ((unsigned long long) ((-1)) & ((0x12345678)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-1)) & ((0x12345678)))) abort (); } while (0); } while (0);
}

static void
test_xor (void)
{
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((0x1234)); if ((a ^= ((0x7856))) != (_Bool) ((_Bool) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (_Bool) ((_Bool) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((0x1234)); if ((a ^= ((0x7856))) != (char) ((char) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (char) ((char) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((0x1234)); if ((a ^= ((0x7856))) != (signed char) ((signed char) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (signed char) ((signed char) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((0x1234)); if ((a ^= ((0x7856))) != (unsigned char) ((unsigned char) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (unsigned char) ((unsigned char) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((0x1234)); if ((a ^= ((0x7856))) != (signed short) ((signed short) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (signed short) ((signed short) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((0x1234)); if ((a ^= ((0x7856))) != (unsigned short) ((unsigned short) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (unsigned short) ((unsigned short) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((0x1234)); if ((a ^= ((0x7856))) != (signed int) ((signed int) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (signed int) ((signed int) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((0x1234)); if ((a ^= ((0x7856))) != (unsigned int) ((unsigned int) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (unsigned int) ((unsigned int) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((0x1234)); if ((a ^= ((0x7856))) != (signed long) ((signed long) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (signed long) ((signed long) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((0x1234)); if ((a ^= ((0x7856))) != (unsigned long) ((unsigned long) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (unsigned long) ((unsigned long) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((0x1234)); if ((a ^= ((0x7856))) != (signed long long) ((signed long long) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (signed long long) ((signed long long) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((0x1234)); if ((a ^= ((0x7856))) != (unsigned long long) ((unsigned long long) ((0x1234)) ^ ((0x7856)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((0x1234)) ^ ((0x7856)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-1)); if ((a ^= ((0x12345678))) != (_Bool) ((_Bool) ((-1)) ^ ((0x12345678)))) abort (); if (a != (_Bool) ((_Bool) ((-1)) ^ ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-1)); if ((a ^= ((0x12345678))) != (char) ((char) ((-1)) ^ ((0x12345678)))) abort (); if (a != (char) ((char) ((-1)) ^ ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-1)); if ((a ^= ((0x12345678))) != (signed char) ((signed char) ((-1)) ^ ((0x12345678)))) abort (); if (a != (signed char) ((signed char) ((-1)) ^ ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-1)); if ((a ^= ((0x12345678))) != (unsigned char) ((unsigned char) ((-1)) ^ ((0x12345678)))) abort (); if (a != (unsigned char) ((unsigned char) ((-1)) ^ ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-1)); if ((a ^= ((0x12345678))) != (signed short) ((signed short) ((-1)) ^ ((0x12345678)))) abort (); if (a != (signed short) ((signed short) ((-1)) ^ ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-1)); if ((a ^= ((0x12345678))) != (unsigned short) ((unsigned short) ((-1)) ^ ((0x12345678)))) abort (); if (a != (unsigned short) ((unsigned short) ((-1)) ^ ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-1)); if ((a ^= ((0x12345678))) != (signed int) ((signed int) ((-1)) ^ ((0x12345678)))) abort (); if (a != (signed int) ((signed int) ((-1)) ^ ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-1)); if ((a ^= ((0x12345678))) != (unsigned int) ((unsigned int) ((-1)) ^ ((0x12345678)))) abort (); if (a != (unsigned int) ((unsigned int) ((-1)) ^ ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-1)); if ((a ^= ((0x12345678))) != (signed long) ((signed long) ((-1)) ^ ((0x12345678)))) abort (); if (a != (signed long) ((signed long) ((-1)) ^ ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-1)); if ((a ^= ((0x12345678))) != (unsigned long) ((unsigned long) ((-1)) ^ ((0x12345678)))) abort (); if (a != (unsigned long) ((unsigned long) ((-1)) ^ ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-1)); if ((a ^= ((0x12345678))) != (signed long long) ((signed long long) ((-1)) ^ ((0x12345678)))) abort (); if (a != (signed long long) ((signed long long) ((-1)) ^ ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-1)); if ((a ^= ((0x12345678))) != (unsigned long long) ((unsigned long long) ((-1)) ^ ((0x12345678)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-1)) ^ ((0x12345678)))) abort (); } while (0); } while (0);
}

static void
test_or (void)
{
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((0x1234)); if ((a |= ((0x7856))) != (_Bool) ((_Bool) ((0x1234)) | ((0x7856)))) abort (); if (a != (_Bool) ((_Bool) ((0x1234)) | ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((0x1234)); if ((a |= ((0x7856))) != (char) ((char) ((0x1234)) | ((0x7856)))) abort (); if (a != (char) ((char) ((0x1234)) | ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((0x1234)); if ((a |= ((0x7856))) != (signed char) ((signed char) ((0x1234)) | ((0x7856)))) abort (); if (a != (signed char) ((signed char) ((0x1234)) | ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((0x1234)); if ((a |= ((0x7856))) != (unsigned char) ((unsigned char) ((0x1234)) | ((0x7856)))) abort (); if (a != (unsigned char) ((unsigned char) ((0x1234)) | ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((0x1234)); if ((a |= ((0x7856))) != (signed short) ((signed short) ((0x1234)) | ((0x7856)))) abort (); if (a != (signed short) ((signed short) ((0x1234)) | ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((0x1234)); if ((a |= ((0x7856))) != (unsigned short) ((unsigned short) ((0x1234)) | ((0x7856)))) abort (); if (a != (unsigned short) ((unsigned short) ((0x1234)) | ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((0x1234)); if ((a |= ((0x7856))) != (signed int) ((signed int) ((0x1234)) | ((0x7856)))) abort (); if (a != (signed int) ((signed int) ((0x1234)) | ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((0x1234)); if ((a |= ((0x7856))) != (unsigned int) ((unsigned int) ((0x1234)) | ((0x7856)))) abort (); if (a != (unsigned int) ((unsigned int) ((0x1234)) | ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((0x1234)); if ((a |= ((0x7856))) != (signed long) ((signed long) ((0x1234)) | ((0x7856)))) abort (); if (a != (signed long) ((signed long) ((0x1234)) | ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((0x1234)); if ((a |= ((0x7856))) != (unsigned long) ((unsigned long) ((0x1234)) | ((0x7856)))) abort (); if (a != (unsigned long) ((unsigned long) ((0x1234)) | ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((0x1234)); if ((a |= ((0x7856))) != (signed long long) ((signed long long) ((0x1234)) | ((0x7856)))) abort (); if (a != (signed long long) ((signed long long) ((0x1234)) | ((0x7856)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((0x1234)); if ((a |= ((0x7856))) != (unsigned long long) ((unsigned long long) ((0x1234)) | ((0x7856)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((0x1234)) | ((0x7856)))) abort (); } while (0); } while (0);
  do { do { static volatile _Atomic (_Bool) a = (_Bool) ((-12345)); if ((a |= ((0x12345678))) != (_Bool) ((_Bool) ((-12345)) | ((0x12345678)))) abort (); if (a != (_Bool) ((_Bool) ((-12345)) | ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (char) a = (char) ((-12345)); if ((a |= ((0x12345678))) != (char) ((char) ((-12345)) | ((0x12345678)))) abort (); if (a != (char) ((char) ((-12345)) | ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed char) a = (signed char) ((-12345)); if ((a |= ((0x12345678))) != (signed char) ((signed char) ((-12345)) | ((0x12345678)))) abort (); if (a != (signed char) ((signed char) ((-12345)) | ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned char) a = (unsigned char) ((-12345)); if ((a |= ((0x12345678))) != (unsigned char) ((unsigned char) ((-12345)) | ((0x12345678)))) abort (); if (a != (unsigned char) ((unsigned char) ((-12345)) | ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed short) a = (signed short) ((-12345)); if ((a |= ((0x12345678))) != (signed short) ((signed short) ((-12345)) | ((0x12345678)))) abort (); if (a != (signed short) ((signed short) ((-12345)) | ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned short) a = (unsigned short) ((-12345)); if ((a |= ((0x12345678))) != (unsigned short) ((unsigned short) ((-12345)) | ((0x12345678)))) abort (); if (a != (unsigned short) ((unsigned short) ((-12345)) | ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed int) a = (signed int) ((-12345)); if ((a |= ((0x12345678))) != (signed int) ((signed int) ((-12345)) | ((0x12345678)))) abort (); if (a != (signed int) ((signed int) ((-12345)) | ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned int) a = (unsigned int) ((-12345)); if ((a |= ((0x12345678))) != (unsigned int) ((unsigned int) ((-12345)) | ((0x12345678)))) abort (); if (a != (unsigned int) ((unsigned int) ((-12345)) | ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed long) a = (signed long) ((-12345)); if ((a |= ((0x12345678))) != (signed long) ((signed long) ((-12345)) | ((0x12345678)))) abort (); if (a != (signed long) ((signed long) ((-12345)) | ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned long) a = (unsigned long) ((-12345)); if ((a |= ((0x12345678))) != (unsigned long) ((unsigned long) ((-12345)) | ((0x12345678)))) abort (); if (a != (unsigned long) ((unsigned long) ((-12345)) | ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (signed long long) a = (signed long long) ((-12345)); if ((a |= ((0x12345678))) != (signed long long) ((signed long long) ((-12345)) | ((0x12345678)))) abort (); if (a != (signed long long) ((signed long long) ((-12345)) | ((0x12345678)))) abort (); } while (0); do { static volatile _Atomic (unsigned long long) a = (unsigned long long) ((-12345)); if ((a |= ((0x12345678))) != (unsigned long long) ((unsigned long long) ((-12345)) | ((0x12345678)))) abort (); if (a != (unsigned long long) ((unsigned long long) ((-12345)) | ((0x12345678)))) abort (); } while (0); } while (0);
}

int
main (void)
{
  test_mult ();
  test_div ();
  test_mod ();
  test_plus ();
  test_minus ();
  test_lshift ();
  test_rshift ();
  test_and ();
  test_xor ();
  test_or ();
  exit (0);
}
