# 1 "vshuf-v32qi.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "vshuf-v32qi.c"






typedef unsigned char V __attribute__((vector_size(32)));
typedef V VI;

# 1 "vshuf-32.inc" 1
# 11 "vshuf-v32qi.c" 2
# 1 "vshuf-main.inc" 1


extern void abort (void);


V a, b, c, d;
# 28 "vshuf-main.inc"
__attribute__((noinline, noclone)) void test_0 (void) { VI mask = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_1 (void) { VI mask = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_2 (void) { VI mask = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_3 (void) { VI mask = { 26, 60, 14, 40, 44, 51, 12, 45, 9, 37, 4, 47, 35, 63, 54, 30, 28, 10, 48, 32, 5, 59, 7, 52, 11, 6, 62, 49, 25, 25, 20, 55 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_4 (void) { VI mask = { 32, 16, 54, 20, 62, 60, 56, 9, 38, 26, 42, 12, 17, 51, 4, 58, 59, 25, 50, 27, 41, 37, 8, 30, 18, 24, 40, 36, 25, 7, 37, 63 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_5 (void) { VI mask = { 0, 4, 60, 9, 23, 19, 45, 6, 5, 12, 38, 60, 34, 36, 26, 11, 47, 52, 63, 39, 7, 56, 17, 54, 53, 39, 18, 2, 37, 55, 22, 21 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_6 (void) { VI mask = { 2, 44, 46, 13, 40, 38, 52, 10, 50, 55, 11, 15, 9, 0, 12, 42, 45, 19, 11, 34, 26, 24, 62, 25, 5, 17, 1, 47, 21, 7, 60, 41 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_7 (void) { VI mask = { 50, 13, 37, 62, 9, 49, 14, 53, 15, 42, 36, 1, 33, 27, 63, 41, 57, 12, 7, 2, 44, 48, 16, 39, 25, 31, 20, 10, 3, 60, 43, 21 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_8 (void) { VI mask = { 1, 37, 22, 61, 5, 14, 46, 47, 6, 35, 10, 48, 30, 26, 33, 13, 18, 18, 11, 21, 44, 29, 60, 45, 19, 37, 7, 43, 36, 1, 28, 59 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_9 (void) { VI mask = { 30, 44, 42, 51, 6, 7, 38, 13, 43, 31, 58, 0, 56, 17, 27, 32, 10, 53, 3, 29, 21, 12, 15, 50, 28, 24, 16, 61, 9, 34, 59, 19 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_10 (void) { VI mask = { 20, 49, 50, 14, 54, 53, 33, 40, 46, 15, 0, 28, 25, 30, 10, 17, 51, 59, 26, 13, 45, 27, 2, 61, 4, 36, 8, 0, 18, 33, 22, 63 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_11 (void) { VI mask = { 13, 40, 7, 33, 51, 21, 59, 46, 47, 32, 9, 34, 63, 35, 41, 17, 24, 1, 8, 26, 52, 62, 11, 22, 37, 28, 5, 39, 10, 53, 60, 2 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_12 (void) { VI mask = { 39, 43, 54, 27, 53, 39, 27, 30, 2, 17, 13, 33, 7, 52, 40, 15, 36, 57, 10, 28, 22, 23, 25, 24, 41, 47, 8, 20, 5, 3, 4, 0 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_13 (void) { VI mask = { 7, 51, 13, 61, 25, 4, 19, 58, 35, 33, 29, 15, 40, 2, 39, 16, 38, 3, 54, 63, 15, 6, 48, 21, 14, 52, 17, 50, 34, 55, 57, 50 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_14 (void) { VI mask = { 22, 53, 28, 42, 45, 38, 49, 13, 54, 61, 21, 52, 7, 16, 34, 9, 1, 43, 62, 43, 35, 50, 47, 58, 20, 3, 30, 15, 37, 53, 43, 36 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_15 (void) { VI mask = { 2, 43, 49, 34, 28, 35, 29, 36, 51, 9, 17, 48, 10, 37, 45, 21, 52, 19, 25, 33, 60, 31, 30, 42, 12, 26, 27, 46, 5, 40, 14, 36 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_16 (void) { VI mask = { 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_17 (void) { VI mask = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_18 (void) { VI mask = { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_19 (void) { VI mask = { 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_20 (void) { VI mask = { 0, 32, 1, 33, 2, 34, 3, 35, 4, 36, 5, 37, 6, 38, 7, 39, 8, 40, 9, 41, 10, 42, 11, 43, 12, 44, 13, 45, 14, 46, 15, 47 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_21 (void) { VI mask = { 16, 48, 17, 49, 18, 50, 19, 51, 20, 52, 21, 53, 22, 54, 23, 55, 24, 56, 25, 57, 26, 58, 27, 59, 28, 60, 29, 61, 30, 62, 31, 63 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_22 (void) { VI mask = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_23 (void) { VI mask = { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 31 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_24 (void) { VI mask = { 0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 2, 5, 8, 11, 14, 17, 20, 23, 26, 29 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_25 (void) { VI mask = { 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_26 (void) { VI mask = { 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_27 (void) { VI mask = { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_28 (void) { VI mask = { 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0, 1, 2, 3, 4, 5, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 16, 17, 18, 19, 20, 21 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); } __attribute__((noinline, noclone)) void test_29 (void) { VI mask = { 0, 43, 2, 3, 57, 5, 6, 7, 8, 53, 40, 11, 12, 13, 42, 15, 16, 40, 18, 19, 20, 21, 22, 23, 24, 25, 36, 58, 36, 29, 30, 31 }; int i; c = __builtin_shuffle (a, mask); d = __builtin_shuffle (a, b, mask); __asm ("" : : "r" (&c), "r" (&d) : "memory"); for (i = 0; i < 32; ++i) if (c[i] != a[mask[i] & (32 - 1)]) abort (); else if ((mask[i] & 32)) { if (d[i] != b[mask[i] & (32 - 1)]) abort (); } else if (d[i] != a[mask[i] & (32 - 1)]) abort (); }





int
main ()
{

  int i;
  for (i = 0; i < 32; ++i)
    {
      a[i] = i + 2;
      b[i] = 32 + i + 2;
    }




  test_0 (); test_1 (); test_2 (); test_3 (); test_4 (); test_5 (); test_6 (); test_7 (); test_8 (); test_9 (); test_10 (); test_11 (); test_12 (); test_13 (); test_14 (); test_15 (); test_16 (); test_17 (); test_18 (); test_19 (); test_20 (); test_21 (); test_22 (); test_23 (); test_24 (); test_25 (); test_26 (); test_27 (); test_28 (); test_29 ();





  return 0;
}
# 11 "vshuf-v32qi.c" 2
