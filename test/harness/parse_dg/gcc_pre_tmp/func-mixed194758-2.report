Failed to parse func-mixed.c
with message:
Syntax error !The symbol `sf0' does not fit here. ("func-mixed.c": line 25)
/* No Input */
Working dir: /home/noah/src/package-sources/language-c/test/harness/parse_dg
Preprocessed input follows:

# 1 "func-mixed.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "func-mixed.c"







extern void abort (void);
# 25 "func-mixed.c"
short _Fract sf0 (short _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } short _Fract sf1 (int arg0, short _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } short _Fract sf2 (int arg0, unsigned arg1, short _Fract arg2, float arg3, double arg4) { return arg2; } short _Fract sf3 (int arg0, unsigned arg1, float arg2, short _Fract arg3, double arg4) { return arg3; } short _Fract sf4 (int arg0, unsigned arg1, float arg2, double arg3, short _Fract arg4) { return arg4; }
_Fract f0 (_Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Fract f1 (int arg0, _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Fract f2 (int arg0, unsigned arg1, _Fract arg2, float arg3, double arg4) { return arg2; } _Fract f3 (int arg0, unsigned arg1, float arg2, _Fract arg3, double arg4) { return arg3; } _Fract f4 (int arg0, unsigned arg1, float arg2, double arg3, _Fract arg4) { return arg4; }
long _Fract lf0 (long _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } long _Fract lf1 (int arg0, long _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } long _Fract lf2 (int arg0, unsigned arg1, long _Fract arg2, float arg3, double arg4) { return arg2; } long _Fract lf3 (int arg0, unsigned arg1, float arg2, long _Fract arg3, double arg4) { return arg3; } long _Fract lf4 (int arg0, unsigned arg1, float arg2, double arg3, long _Fract arg4) { return arg4; }
long long _Fract llf0 (long long _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } long long _Fract llf1 (int arg0, long long _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } long long _Fract llf2 (int arg0, unsigned arg1, long long _Fract arg2, float arg3, double arg4) { return arg2; } long long _Fract llf3 (int arg0, unsigned arg1, float arg2, long long _Fract arg3, double arg4) { return arg3; } long long _Fract llf4 (int arg0, unsigned arg1, float arg2, double arg3, long long _Fract arg4) { return arg4; }
unsigned short _Fract usf0 (unsigned short _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } unsigned short _Fract usf1 (int arg0, unsigned short _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } unsigned short _Fract usf2 (int arg0, unsigned arg1, unsigned short _Fract arg2, float arg3, double arg4) { return arg2; } unsigned short _Fract usf3 (int arg0, unsigned arg1, float arg2, unsigned short _Fract arg3, double arg4) { return arg3; } unsigned short _Fract usf4 (int arg0, unsigned arg1, float arg2, double arg3, unsigned short _Fract arg4) { return arg4; }
unsigned _Fract uf0 (unsigned _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } unsigned _Fract uf1 (int arg0, unsigned _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } unsigned _Fract uf2 (int arg0, unsigned arg1, unsigned _Fract arg2, float arg3, double arg4) { return arg2; } unsigned _Fract uf3 (int arg0, unsigned arg1, float arg2, unsigned _Fract arg3, double arg4) { return arg3; } unsigned _Fract uf4 (int arg0, unsigned arg1, float arg2, double arg3, unsigned _Fract arg4) { return arg4; }
unsigned long _Fract ulf0 (unsigned long _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } unsigned long _Fract ulf1 (int arg0, unsigned long _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } unsigned long _Fract ulf2 (int arg0, unsigned arg1, unsigned long _Fract arg2, float arg3, double arg4) { return arg2; } unsigned long _Fract ulf3 (int arg0, unsigned arg1, float arg2, unsigned long _Fract arg3, double arg4) { return arg3; } unsigned long _Fract ulf4 (int arg0, unsigned arg1, float arg2, double arg3, unsigned long _Fract arg4) { return arg4; }
unsigned long long _Fract ullf0 (unsigned long long _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } unsigned long long _Fract ullf1 (int arg0, unsigned long long _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } unsigned long long _Fract ullf2 (int arg0, unsigned arg1, unsigned long long _Fract arg2, float arg3, double arg4) { return arg2; } unsigned long long _Fract ullf3 (int arg0, unsigned arg1, float arg2, unsigned long long _Fract arg3, double arg4) { return arg3; } unsigned long long _Fract ullf4 (int arg0, unsigned arg1, float arg2, double arg3, unsigned long long _Fract arg4) { return arg4; }
_Sat short _Fract Ssf0 (_Sat short _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat short _Fract Ssf1 (int arg0, _Sat short _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat short _Fract Ssf2 (int arg0, unsigned arg1, _Sat short _Fract arg2, float arg3, double arg4) { return arg2; } _Sat short _Fract Ssf3 (int arg0, unsigned arg1, float arg2, _Sat short _Fract arg3, double arg4) { return arg3; } _Sat short _Fract Ssf4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat short _Fract arg4) { return arg4; }
_Sat _Fract Sf0 (_Sat _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat _Fract Sf1 (int arg0, _Sat _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat _Fract Sf2 (int arg0, unsigned arg1, _Sat _Fract arg2, float arg3, double arg4) { return arg2; } _Sat _Fract Sf3 (int arg0, unsigned arg1, float arg2, _Sat _Fract arg3, double arg4) { return arg3; } _Sat _Fract Sf4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat _Fract arg4) { return arg4; }
_Sat long _Fract Slf0 (_Sat long _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat long _Fract Slf1 (int arg0, _Sat long _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat long _Fract Slf2 (int arg0, unsigned arg1, _Sat long _Fract arg2, float arg3, double arg4) { return arg2; } _Sat long _Fract Slf3 (int arg0, unsigned arg1, float arg2, _Sat long _Fract arg3, double arg4) { return arg3; } _Sat long _Fract Slf4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat long _Fract arg4) { return arg4; }
_Sat long long _Fract Sllf0 (_Sat long long _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat long long _Fract Sllf1 (int arg0, _Sat long long _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat long long _Fract Sllf2 (int arg0, unsigned arg1, _Sat long long _Fract arg2, float arg3, double arg4) { return arg2; } _Sat long long _Fract Sllf3 (int arg0, unsigned arg1, float arg2, _Sat long long _Fract arg3, double arg4) { return arg3; } _Sat long long _Fract Sllf4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat long long _Fract arg4) { return arg4; }
_Sat unsigned short _Fract Susf0 (_Sat unsigned short _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat unsigned short _Fract Susf1 (int arg0, _Sat unsigned short _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat unsigned short _Fract Susf2 (int arg0, unsigned arg1, _Sat unsigned short _Fract arg2, float arg3, double arg4) { return arg2; } _Sat unsigned short _Fract Susf3 (int arg0, unsigned arg1, float arg2, _Sat unsigned short _Fract arg3, double arg4) { return arg3; } _Sat unsigned short _Fract Susf4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat unsigned short _Fract arg4) { return arg4; }
_Sat unsigned _Fract Suf0 (_Sat unsigned _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat unsigned _Fract Suf1 (int arg0, _Sat unsigned _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat unsigned _Fract Suf2 (int arg0, unsigned arg1, _Sat unsigned _Fract arg2, float arg3, double arg4) { return arg2; } _Sat unsigned _Fract Suf3 (int arg0, unsigned arg1, float arg2, _Sat unsigned _Fract arg3, double arg4) { return arg3; } _Sat unsigned _Fract Suf4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat unsigned _Fract arg4) { return arg4; }
_Sat unsigned long _Fract Sulf0 (_Sat unsigned long _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat unsigned long _Fract Sulf1 (int arg0, _Sat unsigned long _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat unsigned long _Fract Sulf2 (int arg0, unsigned arg1, _Sat unsigned long _Fract arg2, float arg3, double arg4) { return arg2; } _Sat unsigned long _Fract Sulf3 (int arg0, unsigned arg1, float arg2, _Sat unsigned long _Fract arg3, double arg4) { return arg3; } _Sat unsigned long _Fract Sulf4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat unsigned long _Fract arg4) { return arg4; }
_Sat unsigned long long _Fract Sullf0 (_Sat unsigned long long _Fract arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat unsigned long long _Fract Sullf1 (int arg0, _Sat unsigned long long _Fract arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat unsigned long long _Fract Sullf2 (int arg0, unsigned arg1, _Sat unsigned long long _Fract arg2, float arg3, double arg4) { return arg2; } _Sat unsigned long long _Fract Sullf3 (int arg0, unsigned arg1, float arg2, _Sat unsigned long long _Fract arg3, double arg4) { return arg3; } _Sat unsigned long long _Fract Sullf4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat unsigned long long _Fract arg4) { return arg4; }
short _Accum sa0 (short _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } short _Accum sa1 (int arg0, short _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } short _Accum sa2 (int arg0, unsigned arg1, short _Accum arg2, float arg3, double arg4) { return arg2; } short _Accum sa3 (int arg0, unsigned arg1, float arg2, short _Accum arg3, double arg4) { return arg3; } short _Accum sa4 (int arg0, unsigned arg1, float arg2, double arg3, short _Accum arg4) { return arg4; }
_Accum a0 (_Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Accum a1 (int arg0, _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Accum a2 (int arg0, unsigned arg1, _Accum arg2, float arg3, double arg4) { return arg2; } _Accum a3 (int arg0, unsigned arg1, float arg2, _Accum arg3, double arg4) { return arg3; } _Accum a4 (int arg0, unsigned arg1, float arg2, double arg3, _Accum arg4) { return arg4; }
long _Accum la0 (long _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } long _Accum la1 (int arg0, long _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } long _Accum la2 (int arg0, unsigned arg1, long _Accum arg2, float arg3, double arg4) { return arg2; } long _Accum la3 (int arg0, unsigned arg1, float arg2, long _Accum arg3, double arg4) { return arg3; } long _Accum la4 (int arg0, unsigned arg1, float arg2, double arg3, long _Accum arg4) { return arg4; }
long long _Accum lla0 (long long _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } long long _Accum lla1 (int arg0, long long _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } long long _Accum lla2 (int arg0, unsigned arg1, long long _Accum arg2, float arg3, double arg4) { return arg2; } long long _Accum lla3 (int arg0, unsigned arg1, float arg2, long long _Accum arg3, double arg4) { return arg3; } long long _Accum lla4 (int arg0, unsigned arg1, float arg2, double arg3, long long _Accum arg4) { return arg4; }
unsigned short _Accum usa0 (unsigned short _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } unsigned short _Accum usa1 (int arg0, unsigned short _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } unsigned short _Accum usa2 (int arg0, unsigned arg1, unsigned short _Accum arg2, float arg3, double arg4) { return arg2; } unsigned short _Accum usa3 (int arg0, unsigned arg1, float arg2, unsigned short _Accum arg3, double arg4) { return arg3; } unsigned short _Accum usa4 (int arg0, unsigned arg1, float arg2, double arg3, unsigned short _Accum arg4) { return arg4; }
unsigned _Accum ua0 (unsigned _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } unsigned _Accum ua1 (int arg0, unsigned _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } unsigned _Accum ua2 (int arg0, unsigned arg1, unsigned _Accum arg2, float arg3, double arg4) { return arg2; } unsigned _Accum ua3 (int arg0, unsigned arg1, float arg2, unsigned _Accum arg3, double arg4) { return arg3; } unsigned _Accum ua4 (int arg0, unsigned arg1, float arg2, double arg3, unsigned _Accum arg4) { return arg4; }
unsigned long _Accum ula0 (unsigned long _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } unsigned long _Accum ula1 (int arg0, unsigned long _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } unsigned long _Accum ula2 (int arg0, unsigned arg1, unsigned long _Accum arg2, float arg3, double arg4) { return arg2; } unsigned long _Accum ula3 (int arg0, unsigned arg1, float arg2, unsigned long _Accum arg3, double arg4) { return arg3; } unsigned long _Accum ula4 (int arg0, unsigned arg1, float arg2, double arg3, unsigned long _Accum arg4) { return arg4; }
unsigned long long _Accum ulla0 (unsigned long long _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } unsigned long long _Accum ulla1 (int arg0, unsigned long long _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } unsigned long long _Accum ulla2 (int arg0, unsigned arg1, unsigned long long _Accum arg2, float arg3, double arg4) { return arg2; } unsigned long long _Accum ulla3 (int arg0, unsigned arg1, float arg2, unsigned long long _Accum arg3, double arg4) { return arg3; } unsigned long long _Accum ulla4 (int arg0, unsigned arg1, float arg2, double arg3, unsigned long long _Accum arg4) { return arg4; }
_Sat short _Accum Ssa0 (_Sat short _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat short _Accum Ssa1 (int arg0, _Sat short _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat short _Accum Ssa2 (int arg0, unsigned arg1, _Sat short _Accum arg2, float arg3, double arg4) { return arg2; } _Sat short _Accum Ssa3 (int arg0, unsigned arg1, float arg2, _Sat short _Accum arg3, double arg4) { return arg3; } _Sat short _Accum Ssa4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat short _Accum arg4) { return arg4; }
_Sat _Accum Sa0 (_Sat _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat _Accum Sa1 (int arg0, _Sat _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat _Accum Sa2 (int arg0, unsigned arg1, _Sat _Accum arg2, float arg3, double arg4) { return arg2; } _Sat _Accum Sa3 (int arg0, unsigned arg1, float arg2, _Sat _Accum arg3, double arg4) { return arg3; } _Sat _Accum Sa4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat _Accum arg4) { return arg4; }
_Sat long _Accum Sla0 (_Sat long _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat long _Accum Sla1 (int arg0, _Sat long _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat long _Accum Sla2 (int arg0, unsigned arg1, _Sat long _Accum arg2, float arg3, double arg4) { return arg2; } _Sat long _Accum Sla3 (int arg0, unsigned arg1, float arg2, _Sat long _Accum arg3, double arg4) { return arg3; } _Sat long _Accum Sla4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat long _Accum arg4) { return arg4; }
_Sat long long _Accum Slla0 (_Sat long long _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat long long _Accum Slla1 (int arg0, _Sat long long _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat long long _Accum Slla2 (int arg0, unsigned arg1, _Sat long long _Accum arg2, float arg3, double arg4) { return arg2; } _Sat long long _Accum Slla3 (int arg0, unsigned arg1, float arg2, _Sat long long _Accum arg3, double arg4) { return arg3; } _Sat long long _Accum Slla4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat long long _Accum arg4) { return arg4; }
_Sat unsigned short _Accum Susa0 (_Sat unsigned short _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat unsigned short _Accum Susa1 (int arg0, _Sat unsigned short _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat unsigned short _Accum Susa2 (int arg0, unsigned arg1, _Sat unsigned short _Accum arg2, float arg3, double arg4) { return arg2; } _Sat unsigned short _Accum Susa3 (int arg0, unsigned arg1, float arg2, _Sat unsigned short _Accum arg3, double arg4) { return arg3; } _Sat unsigned short _Accum Susa4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat unsigned short _Accum arg4) { return arg4; }
_Sat unsigned _Accum Sua0 (_Sat unsigned _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat unsigned _Accum Sua1 (int arg0, _Sat unsigned _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat unsigned _Accum Sua2 (int arg0, unsigned arg1, _Sat unsigned _Accum arg2, float arg3, double arg4) { return arg2; } _Sat unsigned _Accum Sua3 (int arg0, unsigned arg1, float arg2, _Sat unsigned _Accum arg3, double arg4) { return arg3; } _Sat unsigned _Accum Sua4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat unsigned _Accum arg4) { return arg4; }
_Sat unsigned long _Accum Sula0 (_Sat unsigned long _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat unsigned long _Accum Sula1 (int arg0, _Sat unsigned long _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat unsigned long _Accum Sula2 (int arg0, unsigned arg1, _Sat unsigned long _Accum arg2, float arg3, double arg4) { return arg2; } _Sat unsigned long _Accum Sula3 (int arg0, unsigned arg1, float arg2, _Sat unsigned long _Accum arg3, double arg4) { return arg3; } _Sat unsigned long _Accum Sula4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat unsigned long _Accum arg4) { return arg4; }
_Sat unsigned long long _Accum Sulla0 (_Sat unsigned long long _Accum arg0, int arg1, unsigned arg2, float arg3, double arg4) { return arg0; } _Sat unsigned long long _Accum Sulla1 (int arg0, _Sat unsigned long long _Accum arg1, unsigned arg2, float arg3, double arg4) { return arg1; } _Sat unsigned long long _Accum Sulla2 (int arg0, unsigned arg1, _Sat unsigned long long _Accum arg2, float arg3, double arg4) { return arg2; } _Sat unsigned long long _Accum Sulla3 (int arg0, unsigned arg1, float arg2, _Sat unsigned long long _Accum arg3, double arg4) { return arg3; } _Sat unsigned long long _Accum Sulla4 (int arg0, unsigned arg1, float arg2, double arg3, _Sat unsigned long long _Accum arg4) { return arg4; }

int main()
{
# 69 "func-mixed.c"
  { if (sf0 (0.1hr, -1, 1, 0.3f, 0.5) != 0.1hr) abort (); if (sf1 (-1, 0.1hr, 1, 0.3f, 0.5) != 0.1hr) abort (); if (sf2 (-1, 1, 0.1hr, 0.3f, 0.5) != 0.1hr) abort (); if (sf3 (-1, 1, 0.3f, 0.1hr, 0.5) != 0.1hr) abort (); if (sf4 (-1, 1, 0.3f, 0.5, 0.1hr) != 0.1hr) abort (); }
  { if (f0 (0.1r, -1, 1, 0.3f, 0.5) != 0.1r) abort (); if (f1 (-1, 0.1r, 1, 0.3f, 0.5) != 0.1r) abort (); if (f2 (-1, 1, 0.1r, 0.3f, 0.5) != 0.1r) abort (); if (f3 (-1, 1, 0.3f, 0.1r, 0.5) != 0.1r) abort (); if (f4 (-1, 1, 0.3f, 0.5, 0.1r) != 0.1r) abort (); }
  { if (lf0 (0.1lr, -1, 1, 0.3f, 0.5) != 0.1lr) abort (); if (lf1 (-1, 0.1lr, 1, 0.3f, 0.5) != 0.1lr) abort (); if (lf2 (-1, 1, 0.1lr, 0.3f, 0.5) != 0.1lr) abort (); if (lf3 (-1, 1, 0.3f, 0.1lr, 0.5) != 0.1lr) abort (); if (lf4 (-1, 1, 0.3f, 0.5, 0.1lr) != 0.1lr) abort (); }
  { if (llf0 (0.1llr, -1, 1, 0.3f, 0.5) != 0.1llr) abort (); if (llf1 (-1, 0.1llr, 1, 0.3f, 0.5) != 0.1llr) abort (); if (llf2 (-1, 1, 0.1llr, 0.3f, 0.5) != 0.1llr) abort (); if (llf3 (-1, 1, 0.3f, 0.1llr, 0.5) != 0.1llr) abort (); if (llf4 (-1, 1, 0.3f, 0.5, 0.1llr) != 0.1llr) abort (); }
  { if (usf0 (0.1uhr, -1, 1, 0.3f, 0.5) != 0.1uhr) abort (); if (usf1 (-1, 0.1uhr, 1, 0.3f, 0.5) != 0.1uhr) abort (); if (usf2 (-1, 1, 0.1uhr, 0.3f, 0.5) != 0.1uhr) abort (); if (usf3 (-1, 1, 0.3f, 0.1uhr, 0.5) != 0.1uhr) abort (); if (usf4 (-1, 1, 0.3f, 0.5, 0.1uhr) != 0.1uhr) abort (); }
  { if (uf0 (0.1ur, -1, 1, 0.3f, 0.5) != 0.1ur) abort (); if (uf1 (-1, 0.1ur, 1, 0.3f, 0.5) != 0.1ur) abort (); if (uf2 (-1, 1, 0.1ur, 0.3f, 0.5) != 0.1ur) abort (); if (uf3 (-1, 1, 0.3f, 0.1ur, 0.5) != 0.1ur) abort (); if (uf4 (-1, 1, 0.3f, 0.5, 0.1ur) != 0.1ur) abort (); }
  { if (ulf0 (0.1ulr, -1, 1, 0.3f, 0.5) != 0.1ulr) abort (); if (ulf1 (-1, 0.1ulr, 1, 0.3f, 0.5) != 0.1ulr) abort (); if (ulf2 (-1, 1, 0.1ulr, 0.3f, 0.5) != 0.1ulr) abort (); if (ulf3 (-1, 1, 0.3f, 0.1ulr, 0.5) != 0.1ulr) abort (); if (ulf4 (-1, 1, 0.3f, 0.5, 0.1ulr) != 0.1ulr) abort (); }
  { if (ullf0 (0.1ullr, -1, 1, 0.3f, 0.5) != 0.1ullr) abort (); if (ullf1 (-1, 0.1ullr, 1, 0.3f, 0.5) != 0.1ullr) abort (); if (ullf2 (-1, 1, 0.1ullr, 0.3f, 0.5) != 0.1ullr) abort (); if (ullf3 (-1, 1, 0.3f, 0.1ullr, 0.5) != 0.1ullr) abort (); if (ullf4 (-1, 1, 0.3f, 0.5, 0.1ullr) != 0.1ullr) abort (); }
  { if (Ssf0 (0.1hr, -1, 1, 0.3f, 0.5) != 0.1hr) abort (); if (Ssf1 (-1, 0.1hr, 1, 0.3f, 0.5) != 0.1hr) abort (); if (Ssf2 (-1, 1, 0.1hr, 0.3f, 0.5) != 0.1hr) abort (); if (Ssf3 (-1, 1, 0.3f, 0.1hr, 0.5) != 0.1hr) abort (); if (Ssf4 (-1, 1, 0.3f, 0.5, 0.1hr) != 0.1hr) abort (); }
  { if (Sf0 (0.1r, -1, 1, 0.3f, 0.5) != 0.1r) abort (); if (Sf1 (-1, 0.1r, 1, 0.3f, 0.5) != 0.1r) abort (); if (Sf2 (-1, 1, 0.1r, 0.3f, 0.5) != 0.1r) abort (); if (Sf3 (-1, 1, 0.3f, 0.1r, 0.5) != 0.1r) abort (); if (Sf4 (-1, 1, 0.3f, 0.5, 0.1r) != 0.1r) abort (); }
  { if (Slf0 (0.1lr, -1, 1, 0.3f, 0.5) != 0.1lr) abort (); if (Slf1 (-1, 0.1lr, 1, 0.3f, 0.5) != 0.1lr) abort (); if (Slf2 (-1, 1, 0.1lr, 0.3f, 0.5) != 0.1lr) abort (); if (Slf3 (-1, 1, 0.3f, 0.1lr, 0.5) != 0.1lr) abort (); if (Slf4 (-1, 1, 0.3f, 0.5, 0.1lr) != 0.1lr) abort (); }
  { if (Sllf0 (0.1llr, -1, 1, 0.3f, 0.5) != 0.1llr) abort (); if (Sllf1 (-1, 0.1llr, 1, 0.3f, 0.5) != 0.1llr) abort (); if (Sllf2 (-1, 1, 0.1llr, 0.3f, 0.5) != 0.1llr) abort (); if (Sllf3 (-1, 1, 0.3f, 0.1llr, 0.5) != 0.1llr) abort (); if (Sllf4 (-1, 1, 0.3f, 0.5, 0.1llr) != 0.1llr) abort (); }
  { if (Susf0 (0.1uhr, -1, 1, 0.3f, 0.5) != 0.1uhr) abort (); if (Susf1 (-1, 0.1uhr, 1, 0.3f, 0.5) != 0.1uhr) abort (); if (Susf2 (-1, 1, 0.1uhr, 0.3f, 0.5) != 0.1uhr) abort (); if (Susf3 (-1, 1, 0.3f, 0.1uhr, 0.5) != 0.1uhr) abort (); if (Susf4 (-1, 1, 0.3f, 0.5, 0.1uhr) != 0.1uhr) abort (); }
  { if (Suf0 (0.1ur, -1, 1, 0.3f, 0.5) != 0.1ur) abort (); if (Suf1 (-1, 0.1ur, 1, 0.3f, 0.5) != 0.1ur) abort (); if (Suf2 (-1, 1, 0.1ur, 0.3f, 0.5) != 0.1ur) abort (); if (Suf3 (-1, 1, 0.3f, 0.1ur, 0.5) != 0.1ur) abort (); if (Suf4 (-1, 1, 0.3f, 0.5, 0.1ur) != 0.1ur) abort (); }
  { if (Sulf0 (0.1ulr, -1, 1, 0.3f, 0.5) != 0.1ulr) abort (); if (Sulf1 (-1, 0.1ulr, 1, 0.3f, 0.5) != 0.1ulr) abort (); if (Sulf2 (-1, 1, 0.1ulr, 0.3f, 0.5) != 0.1ulr) abort (); if (Sulf3 (-1, 1, 0.3f, 0.1ulr, 0.5) != 0.1ulr) abort (); if (Sulf4 (-1, 1, 0.3f, 0.5, 0.1ulr) != 0.1ulr) abort (); }
  { if (Sullf0 (0.1ullr, -1, 1, 0.3f, 0.5) != 0.1ullr) abort (); if (Sullf1 (-1, 0.1ullr, 1, 0.3f, 0.5) != 0.1ullr) abort (); if (Sullf2 (-1, 1, 0.1ullr, 0.3f, 0.5) != 0.1ullr) abort (); if (Sullf3 (-1, 1, 0.3f, 0.1ullr, 0.5) != 0.1ullr) abort (); if (Sullf4 (-1, 1, 0.3f, 0.5, 0.1ullr) != 0.1ullr) abort (); }
  { if (sa0 (0.1hk, -1, 1, 0.3f, 0.5) != 0.1hk) abort (); if (sa1 (-1, 0.1hk, 1, 0.3f, 0.5) != 0.1hk) abort (); if (sa2 (-1, 1, 0.1hk, 0.3f, 0.5) != 0.1hk) abort (); if (sa3 (-1, 1, 0.3f, 0.1hk, 0.5) != 0.1hk) abort (); if (sa4 (-1, 1, 0.3f, 0.5, 0.1hk) != 0.1hk) abort (); }
  { if (a0 (0.1k, -1, 1, 0.3f, 0.5) != 0.1k) abort (); if (a1 (-1, 0.1k, 1, 0.3f, 0.5) != 0.1k) abort (); if (a2 (-1, 1, 0.1k, 0.3f, 0.5) != 0.1k) abort (); if (a3 (-1, 1, 0.3f, 0.1k, 0.5) != 0.1k) abort (); if (a4 (-1, 1, 0.3f, 0.5, 0.1k) != 0.1k) abort (); }
  { if (la0 (0.1lk, -1, 1, 0.3f, 0.5) != 0.1lk) abort (); if (la1 (-1, 0.1lk, 1, 0.3f, 0.5) != 0.1lk) abort (); if (la2 (-1, 1, 0.1lk, 0.3f, 0.5) != 0.1lk) abort (); if (la3 (-1, 1, 0.3f, 0.1lk, 0.5) != 0.1lk) abort (); if (la4 (-1, 1, 0.3f, 0.5, 0.1lk) != 0.1lk) abort (); }
  { if (lla0 (0.1llk, -1, 1, 0.3f, 0.5) != 0.1llk) abort (); if (lla1 (-1, 0.1llk, 1, 0.3f, 0.5) != 0.1llk) abort (); if (lla2 (-1, 1, 0.1llk, 0.3f, 0.5) != 0.1llk) abort (); if (lla3 (-1, 1, 0.3f, 0.1llk, 0.5) != 0.1llk) abort (); if (lla4 (-1, 1, 0.3f, 0.5, 0.1llk) != 0.1llk) abort (); }
  { if (usa0 (0.1uhk, -1, 1, 0.3f, 0.5) != 0.1uhk) abort (); if (usa1 (-1, 0.1uhk, 1, 0.3f, 0.5) != 0.1uhk) abort (); if (usa2 (-1, 1, 0.1uhk, 0.3f, 0.5) != 0.1uhk) abort (); if (usa3 (-1, 1, 0.3f, 0.1uhk, 0.5) != 0.1uhk) abort (); if (usa4 (-1, 1, 0.3f, 0.5, 0.1uhk) != 0.1uhk) abort (); }
  { if (ua0 (0.1uk, -1, 1, 0.3f, 0.5) != 0.1uk) abort (); if (ua1 (-1, 0.1uk, 1, 0.3f, 0.5) != 0.1uk) abort (); if (ua2 (-1, 1, 0.1uk, 0.3f, 0.5) != 0.1uk) abort (); if (ua3 (-1, 1, 0.3f, 0.1uk, 0.5) != 0.1uk) abort (); if (ua4 (-1, 1, 0.3f, 0.5, 0.1uk) != 0.1uk) abort (); }
  { if (ula0 (0.1ulk, -1, 1, 0.3f, 0.5) != 0.1ulk) abort (); if (ula1 (-1, 0.1ulk, 1, 0.3f, 0.5) != 0.1ulk) abort (); if (ula2 (-1, 1, 0.1ulk, 0.3f, 0.5) != 0.1ulk) abort (); if (ula3 (-1, 1, 0.3f, 0.1ulk, 0.5) != 0.1ulk) abort (); if (ula4 (-1, 1, 0.3f, 0.5, 0.1ulk) != 0.1ulk) abort (); }
  { if (ulla0 (0.1ullk, -1, 1, 0.3f, 0.5) != 0.1ullk) abort (); if (ulla1 (-1, 0.1ullk, 1, 0.3f, 0.5) != 0.1ullk) abort (); if (ulla2 (-1, 1, 0.1ullk, 0.3f, 0.5) != 0.1ullk) abort (); if (ulla3 (-1, 1, 0.3f, 0.1ullk, 0.5) != 0.1ullk) abort (); if (ulla4 (-1, 1, 0.3f, 0.5, 0.1ullk) != 0.1ullk) abort (); }
  { if (Ssa0 (0.1hk, -1, 1, 0.3f, 0.5) != 0.1hk) abort (); if (Ssa1 (-1, 0.1hk, 1, 0.3f, 0.5) != 0.1hk) abort (); if (Ssa2 (-1, 1, 0.1hk, 0.3f, 0.5) != 0.1hk) abort (); if (Ssa3 (-1, 1, 0.3f, 0.1hk, 0.5) != 0.1hk) abort (); if (Ssa4 (-1, 1, 0.3f, 0.5, 0.1hk) != 0.1hk) abort (); }
  { if (Sa0 (0.1k, -1, 1, 0.3f, 0.5) != 0.1k) abort (); if (Sa1 (-1, 0.1k, 1, 0.3f, 0.5) != 0.1k) abort (); if (Sa2 (-1, 1, 0.1k, 0.3f, 0.5) != 0.1k) abort (); if (Sa3 (-1, 1, 0.3f, 0.1k, 0.5) != 0.1k) abort (); if (Sa4 (-1, 1, 0.3f, 0.5, 0.1k) != 0.1k) abort (); }
  { if (Sla0 (0.1lk, -1, 1, 0.3f, 0.5) != 0.1lk) abort (); if (Sla1 (-1, 0.1lk, 1, 0.3f, 0.5) != 0.1lk) abort (); if (Sla2 (-1, 1, 0.1lk, 0.3f, 0.5) != 0.1lk) abort (); if (Sla3 (-1, 1, 0.3f, 0.1lk, 0.5) != 0.1lk) abort (); if (Sla4 (-1, 1, 0.3f, 0.5, 0.1lk) != 0.1lk) abort (); }
  { if (Slla0 (0.1llk, -1, 1, 0.3f, 0.5) != 0.1llk) abort (); if (Slla1 (-1, 0.1llk, 1, 0.3f, 0.5) != 0.1llk) abort (); if (Slla2 (-1, 1, 0.1llk, 0.3f, 0.5) != 0.1llk) abort (); if (Slla3 (-1, 1, 0.3f, 0.1llk, 0.5) != 0.1llk) abort (); if (Slla4 (-1, 1, 0.3f, 0.5, 0.1llk) != 0.1llk) abort (); }
  { if (Susa0 (0.1uhk, -1, 1, 0.3f, 0.5) != 0.1uhk) abort (); if (Susa1 (-1, 0.1uhk, 1, 0.3f, 0.5) != 0.1uhk) abort (); if (Susa2 (-1, 1, 0.1uhk, 0.3f, 0.5) != 0.1uhk) abort (); if (Susa3 (-1, 1, 0.3f, 0.1uhk, 0.5) != 0.1uhk) abort (); if (Susa4 (-1, 1, 0.3f, 0.5, 0.1uhk) != 0.1uhk) abort (); }
  { if (Sua0 (0.1uk, -1, 1, 0.3f, 0.5) != 0.1uk) abort (); if (Sua1 (-1, 0.1uk, 1, 0.3f, 0.5) != 0.1uk) abort (); if (Sua2 (-1, 1, 0.1uk, 0.3f, 0.5) != 0.1uk) abort (); if (Sua3 (-1, 1, 0.3f, 0.1uk, 0.5) != 0.1uk) abort (); if (Sua4 (-1, 1, 0.3f, 0.5, 0.1uk) != 0.1uk) abort (); }
  { if (Sula0 (0.1ulk, -1, 1, 0.3f, 0.5) != 0.1ulk) abort (); if (Sula1 (-1, 0.1ulk, 1, 0.3f, 0.5) != 0.1ulk) abort (); if (Sula2 (-1, 1, 0.1ulk, 0.3f, 0.5) != 0.1ulk) abort (); if (Sula3 (-1, 1, 0.3f, 0.1ulk, 0.5) != 0.1ulk) abort (); if (Sula4 (-1, 1, 0.3f, 0.5, 0.1ulk) != 0.1ulk) abort (); }
  { if (Sulla0 (0.1ullk, -1, 1, 0.3f, 0.5) != 0.1ullk) abort (); if (Sulla1 (-1, 0.1ullk, 1, 0.3f, 0.5) != 0.1ullk) abort (); if (Sulla2 (-1, 1, 0.1ullk, 0.3f, 0.5) != 0.1ullk) abort (); if (Sulla3 (-1, 1, 0.3f, 0.1ullk, 0.5) != 0.1ullk) abort (); if (Sulla4 (-1, 1, 0.3f, 0.5, 0.1ullk) != 0.1ullk) abort (); }

  return 0;
}
