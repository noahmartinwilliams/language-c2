# 1 "scalar-by-value-3_x.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "scalar-by-value-3_x.c"
# 1 "compat-common.h" 1
# 53 "compat-common.h"
extern void abort (void);

extern int fails;
# 2 "scalar-by-value-3_x.c" 2
# 149 "scalar-by-value-3_x.c"
_Complex int g01ci, g02ci, g03ci, g04ci; _Complex int g05ci, g06ci, g07ci, g08ci; _Complex int g09ci, g10ci, g11ci, g12ci; _Complex int g13ci, g14ci, g15ci, g16ci; extern void initci (_Complex int *p, _Complex int v); extern void checkgci (void); extern void testci (_Complex int x01, _Complex int x02, _Complex int x03, _Complex int x04, _Complex int x05, _Complex int x06, _Complex int x07, _Complex int x08, _Complex int x09, _Complex int x10, _Complex int x11, _Complex int x12, _Complex int x13, _Complex int x14, _Complex int x15, _Complex int x16); extern void testvaci (int n, ...); void checkci (_Complex int x, _Complex int v) { if (x != v + (2 + 3 * __extension__ 1i)) abort (); } void test2_ci (_Complex int x01, _Complex int x02, _Complex int x03, _Complex int x04, _Complex int x05, _Complex int x06, _Complex int x07, _Complex int x08) { testci (x01, g02ci, x02, g04ci, x03, g06ci, x04, g08ci, x05, g10ci, x06, g12ci, x07, g14ci, x08, g16ci); } void testitci (void) { ; ; initci (&g01ci, 1); initci (&g02ci, 2); initci (&g03ci, 3); initci (&g04ci, 4); initci (&g05ci, 5); initci (&g06ci, 6); initci (&g07ci, 7); initci (&g08ci, 8); initci (&g09ci, 9); initci (&g10ci, 10); initci (&g11ci, 11); initci (&g12ci, 12); initci (&g13ci, 13); initci (&g14ci, 14); initci (&g15ci, 15); initci (&g16ci, 16); checkgci (); ; ; ; testci (g01ci, g02ci, g03ci, g04ci, g05ci, g06ci, g07ci, g08ci, g09ci, g10ci, g11ci, g12ci, g13ci, g14ci, g15ci, g16ci); ; ; ; ; testvaci (1, g01ci); ; testvaci (2, g01ci, g02ci); ; testvaci (3, g01ci, g02ci, g03ci); ; testvaci (4, g01ci, g02ci, g03ci, g04ci); ; testvaci (5, g01ci, g02ci, g03ci, g04ci, g05ci); ; testvaci (6, g01ci, g02ci, g03ci, g04ci, g05ci, g06ci); ; testvaci (7, g01ci, g02ci, g03ci, g04ci, g05ci, g06ci, g07ci); ; testvaci (8, g01ci, g02ci, g03ci, g04ci, g05ci, g06ci, g07ci, g08ci); ; testvaci (9, g01ci, g02ci, g03ci, g04ci, g05ci, g06ci, g07ci, g08ci, g09ci); ; testvaci (10, g01ci, g02ci, g03ci, g04ci, g05ci, g06ci, g07ci, g08ci, g09ci, g10ci); ; testvaci (11, g01ci, g02ci, g03ci, g04ci, g05ci, g06ci, g07ci, g08ci, g09ci, g10ci, g11ci); ; testvaci (12, g01ci, g02ci, g03ci, g04ci, g05ci, g06ci, g07ci, g08ci, g09ci, g10ci, g11ci, g12ci); ; testvaci (13, g01ci, g02ci, g03ci, g04ci, g05ci, g06ci, g07ci, g08ci, g09ci, g10ci, g11ci, g12ci, g13ci); ; testvaci (14, g01ci, g02ci, g03ci, g04ci, g05ci, g06ci, g07ci, g08ci, g09ci, g10ci, g11ci, g12ci, g13ci, g14ci); ; testvaci (15, g01ci, g02ci, g03ci, g04ci, g05ci, g06ci, g07ci, g08ci, g09ci, g10ci, g11ci, g12ci, g13ci, g14ci, g15ci); ; testvaci (16, g01ci, g02ci, g03ci, g04ci, g05ci, g06ci, g07ci, g08ci, g09ci, g10ci, g11ci, g12ci, g13ci, g14ci, g15ci, g16ci); ; ; ; test2_ci (g01ci, g03ci, g05ci, g07ci, g09ci, g11ci, g13ci, g15ci); ; }
_Complex long g01cl, g02cl, g03cl, g04cl; _Complex long g05cl, g06cl, g07cl, g08cl; _Complex long g09cl, g10cl, g11cl, g12cl; _Complex long g13cl, g14cl, g15cl, g16cl; extern void initcl (_Complex long *p, _Complex long v); extern void checkgcl (void); extern void testcl (_Complex long x01, _Complex long x02, _Complex long x03, _Complex long x04, _Complex long x05, _Complex long x06, _Complex long x07, _Complex long x08, _Complex long x09, _Complex long x10, _Complex long x11, _Complex long x12, _Complex long x13, _Complex long x14, _Complex long x15, _Complex long x16); extern void testvacl (int n, ...); void checkcl (_Complex long x, _Complex long v) { if (x != v + (3 + 4 * __extension__ 1i)) abort (); } void test2_cl (_Complex long x01, _Complex long x02, _Complex long x03, _Complex long x04, _Complex long x05, _Complex long x06, _Complex long x07, _Complex long x08) { testcl (x01, g02cl, x02, g04cl, x03, g06cl, x04, g08cl, x05, g10cl, x06, g12cl, x07, g14cl, x08, g16cl); } void testitcl (void) { ; ; initcl (&g01cl, 1); initcl (&g02cl, 2); initcl (&g03cl, 3); initcl (&g04cl, 4); initcl (&g05cl, 5); initcl (&g06cl, 6); initcl (&g07cl, 7); initcl (&g08cl, 8); initcl (&g09cl, 9); initcl (&g10cl, 10); initcl (&g11cl, 11); initcl (&g12cl, 12); initcl (&g13cl, 13); initcl (&g14cl, 14); initcl (&g15cl, 15); initcl (&g16cl, 16); checkgcl (); ; ; ; testcl (g01cl, g02cl, g03cl, g04cl, g05cl, g06cl, g07cl, g08cl, g09cl, g10cl, g11cl, g12cl, g13cl, g14cl, g15cl, g16cl); ; ; ; ; testvacl (1, g01cl); ; testvacl (2, g01cl, g02cl); ; testvacl (3, g01cl, g02cl, g03cl); ; testvacl (4, g01cl, g02cl, g03cl, g04cl); ; testvacl (5, g01cl, g02cl, g03cl, g04cl, g05cl); ; testvacl (6, g01cl, g02cl, g03cl, g04cl, g05cl, g06cl); ; testvacl (7, g01cl, g02cl, g03cl, g04cl, g05cl, g06cl, g07cl); ; testvacl (8, g01cl, g02cl, g03cl, g04cl, g05cl, g06cl, g07cl, g08cl); ; testvacl (9, g01cl, g02cl, g03cl, g04cl, g05cl, g06cl, g07cl, g08cl, g09cl); ; testvacl (10, g01cl, g02cl, g03cl, g04cl, g05cl, g06cl, g07cl, g08cl, g09cl, g10cl); ; testvacl (11, g01cl, g02cl, g03cl, g04cl, g05cl, g06cl, g07cl, g08cl, g09cl, g10cl, g11cl); ; testvacl (12, g01cl, g02cl, g03cl, g04cl, g05cl, g06cl, g07cl, g08cl, g09cl, g10cl, g11cl, g12cl); ; testvacl (13, g01cl, g02cl, g03cl, g04cl, g05cl, g06cl, g07cl, g08cl, g09cl, g10cl, g11cl, g12cl, g13cl); ; testvacl (14, g01cl, g02cl, g03cl, g04cl, g05cl, g06cl, g07cl, g08cl, g09cl, g10cl, g11cl, g12cl, g13cl, g14cl); ; testvacl (15, g01cl, g02cl, g03cl, g04cl, g05cl, g06cl, g07cl, g08cl, g09cl, g10cl, g11cl, g12cl, g13cl, g14cl, g15cl); ; testvacl (16, g01cl, g02cl, g03cl, g04cl, g05cl, g06cl, g07cl, g08cl, g09cl, g10cl, g11cl, g12cl, g13cl, g14cl, g15cl, g16cl); ; ; ; test2_cl (g01cl, g03cl, g05cl, g07cl, g09cl, g11cl, g13cl, g15cl); ; }
_Complex long long g01cll, g02cll, g03cll, g04cll; _Complex long long g05cll, g06cll, g07cll, g08cll; _Complex long long g09cll, g10cll, g11cll, g12cll; _Complex long long g13cll, g14cll, g15cll, g16cll; extern void initcll (_Complex long long *p, _Complex long long v); extern void checkgcll (void); extern void testcll (_Complex long long x01, _Complex long long x02, _Complex long long x03, _Complex long long x04, _Complex long long x05, _Complex long long x06, _Complex long long x07, _Complex long long x08, _Complex long long x09, _Complex long long x10, _Complex long long x11, _Complex long long x12, _Complex long long x13, _Complex long long x14, _Complex long long x15, _Complex long long x16); extern void testvacll (int n, ...); void checkcll (_Complex long long x, _Complex long long v) { if (x != v + (5 + 6 * __extension__ 1i)) abort (); } void test2_cll (_Complex long long x01, _Complex long long x02, _Complex long long x03, _Complex long long x04, _Complex long long x05, _Complex long long x06, _Complex long long x07, _Complex long long x08) { testcll (x01, g02cll, x02, g04cll, x03, g06cll, x04, g08cll, x05, g10cll, x06, g12cll, x07, g14cll, x08, g16cll); } void testitcll (void) { ; ; initcll (&g01cll, 1); initcll (&g02cll, 2); initcll (&g03cll, 3); initcll (&g04cll, 4); initcll (&g05cll, 5); initcll (&g06cll, 6); initcll (&g07cll, 7); initcll (&g08cll, 8); initcll (&g09cll, 9); initcll (&g10cll, 10); initcll (&g11cll, 11); initcll (&g12cll, 12); initcll (&g13cll, 13); initcll (&g14cll, 14); initcll (&g15cll, 15); initcll (&g16cll, 16); checkgcll (); ; ; ; testcll (g01cll, g02cll, g03cll, g04cll, g05cll, g06cll, g07cll, g08cll, g09cll, g10cll, g11cll, g12cll, g13cll, g14cll, g15cll, g16cll); ; ; ; ; testvacll (1, g01cll); ; testvacll (2, g01cll, g02cll); ; testvacll (3, g01cll, g02cll, g03cll); ; testvacll (4, g01cll, g02cll, g03cll, g04cll); ; testvacll (5, g01cll, g02cll, g03cll, g04cll, g05cll); ; testvacll (6, g01cll, g02cll, g03cll, g04cll, g05cll, g06cll); ; testvacll (7, g01cll, g02cll, g03cll, g04cll, g05cll, g06cll, g07cll); ; testvacll (8, g01cll, g02cll, g03cll, g04cll, g05cll, g06cll, g07cll, g08cll); ; testvacll (9, g01cll, g02cll, g03cll, g04cll, g05cll, g06cll, g07cll, g08cll, g09cll); ; testvacll (10, g01cll, g02cll, g03cll, g04cll, g05cll, g06cll, g07cll, g08cll, g09cll, g10cll); ; testvacll (11, g01cll, g02cll, g03cll, g04cll, g05cll, g06cll, g07cll, g08cll, g09cll, g10cll, g11cll); ; testvacll (12, g01cll, g02cll, g03cll, g04cll, g05cll, g06cll, g07cll, g08cll, g09cll, g10cll, g11cll, g12cll); ; testvacll (13, g01cll, g02cll, g03cll, g04cll, g05cll, g06cll, g07cll, g08cll, g09cll, g10cll, g11cll, g12cll, g13cll); ; testvacll (14, g01cll, g02cll, g03cll, g04cll, g05cll, g06cll, g07cll, g08cll, g09cll, g10cll, g11cll, g12cll, g13cll, g14cll); ; testvacll (15, g01cll, g02cll, g03cll, g04cll, g05cll, g06cll, g07cll, g08cll, g09cll, g10cll, g11cll, g12cll, g13cll, g14cll, g15cll); ; testvacll (16, g01cll, g02cll, g03cll, g04cll, g05cll, g06cll, g07cll, g08cll, g09cll, g10cll, g11cll, g12cll, g13cll, g14cll, g15cll, g16cll); ; ; ; test2_cll (g01cll, g03cll, g05cll, g07cll, g09cll, g11cll, g13cll, g15cll); ; }

_Complex double g01cd, g02cd, g03cd, g04cd; _Complex double g05cd, g06cd, g07cd, g08cd; _Complex double g09cd, g10cd, g11cd, g12cd; _Complex double g13cd, g14cd, g15cd, g16cd; extern void initcd (_Complex double *p, _Complex double v); extern void checkgcd (void); extern void testcd (_Complex double x01, _Complex double x02, _Complex double x03, _Complex double x04, _Complex double x05, _Complex double x06, _Complex double x07, _Complex double x08, _Complex double x09, _Complex double x10, _Complex double x11, _Complex double x12, _Complex double x13, _Complex double x14, _Complex double x15, _Complex double x16); extern void testvacd (int n, ...); void checkcd (_Complex double x, _Complex double v) { if (x != v + (7.0 + 8.0 * __extension__ 1.0i)) abort (); } void test2_cd (_Complex double x01, _Complex double x02, _Complex double x03, _Complex double x04, _Complex double x05, _Complex double x06, _Complex double x07, _Complex double x08) { testcd (x01, g02cd, x02, g04cd, x03, g06cd, x04, g08cd, x05, g10cd, x06, g12cd, x07, g14cd, x08, g16cd); } void testitcd (void) { ; ; initcd (&g01cd, 1); initcd (&g02cd, 2); initcd (&g03cd, 3); initcd (&g04cd, 4); initcd (&g05cd, 5); initcd (&g06cd, 6); initcd (&g07cd, 7); initcd (&g08cd, 8); initcd (&g09cd, 9); initcd (&g10cd, 10); initcd (&g11cd, 11); initcd (&g12cd, 12); initcd (&g13cd, 13); initcd (&g14cd, 14); initcd (&g15cd, 15); initcd (&g16cd, 16); checkgcd (); ; ; ; testcd (g01cd, g02cd, g03cd, g04cd, g05cd, g06cd, g07cd, g08cd, g09cd, g10cd, g11cd, g12cd, g13cd, g14cd, g15cd, g16cd); ; ; ; ; testvacd (1, g01cd); ; testvacd (2, g01cd, g02cd); ; testvacd (3, g01cd, g02cd, g03cd); ; testvacd (4, g01cd, g02cd, g03cd, g04cd); ; testvacd (5, g01cd, g02cd, g03cd, g04cd, g05cd); ; testvacd (6, g01cd, g02cd, g03cd, g04cd, g05cd, g06cd); ; testvacd (7, g01cd, g02cd, g03cd, g04cd, g05cd, g06cd, g07cd); ; testvacd (8, g01cd, g02cd, g03cd, g04cd, g05cd, g06cd, g07cd, g08cd); ; testvacd (9, g01cd, g02cd, g03cd, g04cd, g05cd, g06cd, g07cd, g08cd, g09cd); ; testvacd (10, g01cd, g02cd, g03cd, g04cd, g05cd, g06cd, g07cd, g08cd, g09cd, g10cd); ; testvacd (11, g01cd, g02cd, g03cd, g04cd, g05cd, g06cd, g07cd, g08cd, g09cd, g10cd, g11cd); ; testvacd (12, g01cd, g02cd, g03cd, g04cd, g05cd, g06cd, g07cd, g08cd, g09cd, g10cd, g11cd, g12cd); ; testvacd (13, g01cd, g02cd, g03cd, g04cd, g05cd, g06cd, g07cd, g08cd, g09cd, g10cd, g11cd, g12cd, g13cd); ; testvacd (14, g01cd, g02cd, g03cd, g04cd, g05cd, g06cd, g07cd, g08cd, g09cd, g10cd, g11cd, g12cd, g13cd, g14cd); ; testvacd (15, g01cd, g02cd, g03cd, g04cd, g05cd, g06cd, g07cd, g08cd, g09cd, g10cd, g11cd, g12cd, g13cd, g14cd, g15cd); ; testvacd (16, g01cd, g02cd, g03cd, g04cd, g05cd, g06cd, g07cd, g08cd, g09cd, g10cd, g11cd, g12cd, g13cd, g14cd, g15cd, g16cd); ; ; ; test2_cd (g01cd, g03cd, g05cd, g07cd, g09cd, g11cd, g13cd, g15cd); ; }
_Complex long double g01cld, g02cld, g03cld, g04cld; _Complex long double g05cld, g06cld, g07cld, g08cld; _Complex long double g09cld, g10cld, g11cld, g12cld; _Complex long double g13cld, g14cld, g15cld, g16cld; extern void initcld (_Complex long double *p, _Complex long double v); extern void checkgcld (void); extern void testcld (_Complex long double x01, _Complex long double x02, _Complex long double x03, _Complex long double x04, _Complex long double x05, _Complex long double x06, _Complex long double x07, _Complex long double x08, _Complex long double x09, _Complex long double x10, _Complex long double x11, _Complex long double x12, _Complex long double x13, _Complex long double x14, _Complex long double x15, _Complex long double x16); extern void testvacld (int n, ...); void checkcld (_Complex long double x, _Complex long double v) { if (x != v + (8.0 + 9.0 * __extension__ 1.0i)) abort (); } void test2_cld (_Complex long double x01, _Complex long double x02, _Complex long double x03, _Complex long double x04, _Complex long double x05, _Complex long double x06, _Complex long double x07, _Complex long double x08) { testcld (x01, g02cld, x02, g04cld, x03, g06cld, x04, g08cld, x05, g10cld, x06, g12cld, x07, g14cld, x08, g16cld); } void testitcld (void) { ; ; initcld (&g01cld, 1); initcld (&g02cld, 2); initcld (&g03cld, 3); initcld (&g04cld, 4); initcld (&g05cld, 5); initcld (&g06cld, 6); initcld (&g07cld, 7); initcld (&g08cld, 8); initcld (&g09cld, 9); initcld (&g10cld, 10); initcld (&g11cld, 11); initcld (&g12cld, 12); initcld (&g13cld, 13); initcld (&g14cld, 14); initcld (&g15cld, 15); initcld (&g16cld, 16); checkgcld (); ; ; ; testcld (g01cld, g02cld, g03cld, g04cld, g05cld, g06cld, g07cld, g08cld, g09cld, g10cld, g11cld, g12cld, g13cld, g14cld, g15cld, g16cld); ; ; ; ; testvacld (1, g01cld); ; testvacld (2, g01cld, g02cld); ; testvacld (3, g01cld, g02cld, g03cld); ; testvacld (4, g01cld, g02cld, g03cld, g04cld); ; testvacld (5, g01cld, g02cld, g03cld, g04cld, g05cld); ; testvacld (6, g01cld, g02cld, g03cld, g04cld, g05cld, g06cld); ; testvacld (7, g01cld, g02cld, g03cld, g04cld, g05cld, g06cld, g07cld); ; testvacld (8, g01cld, g02cld, g03cld, g04cld, g05cld, g06cld, g07cld, g08cld); ; testvacld (9, g01cld, g02cld, g03cld, g04cld, g05cld, g06cld, g07cld, g08cld, g09cld); ; testvacld (10, g01cld, g02cld, g03cld, g04cld, g05cld, g06cld, g07cld, g08cld, g09cld, g10cld); ; testvacld (11, g01cld, g02cld, g03cld, g04cld, g05cld, g06cld, g07cld, g08cld, g09cld, g10cld, g11cld); ; testvacld (12, g01cld, g02cld, g03cld, g04cld, g05cld, g06cld, g07cld, g08cld, g09cld, g10cld, g11cld, g12cld); ; testvacld (13, g01cld, g02cld, g03cld, g04cld, g05cld, g06cld, g07cld, g08cld, g09cld, g10cld, g11cld, g12cld, g13cld); ; testvacld (14, g01cld, g02cld, g03cld, g04cld, g05cld, g06cld, g07cld, g08cld, g09cld, g10cld, g11cld, g12cld, g13cld, g14cld); ; testvacld (15, g01cld, g02cld, g03cld, g04cld, g05cld, g06cld, g07cld, g08cld, g09cld, g10cld, g11cld, g12cld, g13cld, g14cld, g15cld); ; testvacld (16, g01cld, g02cld, g03cld, g04cld, g05cld, g06cld, g07cld, g08cld, g09cld, g10cld, g11cld, g12cld, g13cld, g14cld, g15cld, g16cld); ; ; ; test2_cld (g01cld, g03cld, g05cld, g07cld, g09cld, g11cld, g13cld, g15cld); ; }




void
scalar_by_value_3_x ()
{






testitci ();
testitcl ();
testitcll ();

testitcd ();
testitcld ();




if (fails != 0)
  abort ();


}
